/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.myOcl.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.mydsl.myOcl.BinaryOperatorCS;
import org.xtext.example.mydsl.myOcl.BooleanLiteralExpCS;
import org.xtext.example.mydsl.myOcl.ClassifierContextDeclCS;
import org.xtext.example.mydsl.myOcl.CollectionLiteralExpCS;
import org.xtext.example.mydsl.myOcl.CollectionLiteralPartCS;
import org.xtext.example.mydsl.myOcl.CollectionTypeCS;
import org.xtext.example.mydsl.myOcl.CompleteOCLDocumentCS;
import org.xtext.example.mydsl.myOcl.ConstraintCS;
import org.xtext.example.mydsl.myOcl.ContextDeclCS;
import org.xtext.example.mydsl.myOcl.DefCS;
import org.xtext.example.mydsl.myOcl.DefOperationCS;
import org.xtext.example.mydsl.myOcl.DefParameterCS;
import org.xtext.example.mydsl.myOcl.DefPropertyCS;
import org.xtext.example.mydsl.myOcl.ExpCS;
import org.xtext.example.mydsl.myOcl.IfExpCS;
import org.xtext.example.mydsl.myOcl.ImportCS;
import org.xtext.example.mydsl.myOcl.IndexExpCS;
import org.xtext.example.mydsl.myOcl.InfixExpCS;
import org.xtext.example.mydsl.myOcl.InfixOperatorCS;
import org.xtext.example.mydsl.myOcl.InfixedExpCS;
import org.xtext.example.mydsl.myOcl.InvalidLiteralExpCS;
import org.xtext.example.mydsl.myOcl.LetExpCS;
import org.xtext.example.mydsl.myOcl.LetVariableCS;
import org.xtext.example.mydsl.myOcl.MyOclFactory;
import org.xtext.example.mydsl.myOcl.MyOclPackage;
import org.xtext.example.mydsl.myOcl.NameExpCS;
import org.xtext.example.mydsl.myOcl.NavigatingArgCS;
import org.xtext.example.mydsl.myOcl.NavigatingArgExpCS;
import org.xtext.example.mydsl.myOcl.NavigatingBarArgCS;
import org.xtext.example.mydsl.myOcl.NavigatingCommaArgCS;
import org.xtext.example.mydsl.myOcl.NavigatingExpCS;
import org.xtext.example.mydsl.myOcl.NavigatingExpCS_Base;
import org.xtext.example.mydsl.myOcl.NavigatingSemiArgCS;
import org.xtext.example.mydsl.myOcl.NavigationOperatorCS;
import org.xtext.example.mydsl.myOcl.NestedExpCS;
import org.xtext.example.mydsl.myOcl.NullLiteralExpCS;
import org.xtext.example.mydsl.myOcl.NumberLiteralExpCS;
import org.xtext.example.mydsl.myOcl.OCLMessageArgCS;
import org.xtext.example.mydsl.myOcl.OperationContextDeclCS;
import org.xtext.example.mydsl.myOcl.PackageDeclarationCS;
import org.xtext.example.mydsl.myOcl.ParameterCS;
import org.xtext.example.mydsl.myOcl.PrefixExpCS;
import org.xtext.example.mydsl.myOcl.PrefixedExpCS;
import org.xtext.example.mydsl.myOcl.PrimaryExpCS;
import org.xtext.example.mydsl.myOcl.PrimitiveLiteralExpCS;
import org.xtext.example.mydsl.myOcl.PrimitiveTypeCS;
import org.xtext.example.mydsl.myOcl.PropertyContextDeclCS;
import org.xtext.example.mydsl.myOcl.SelfExpCS;
import org.xtext.example.mydsl.myOcl.SpecificationCS;
import org.xtext.example.mydsl.myOcl.StringLiteralExpCS;
import org.xtext.example.mydsl.myOcl.TemplateSignatureCS;
import org.xtext.example.mydsl.myOcl.TupleLiteralExpCS;
import org.xtext.example.mydsl.myOcl.TupleLiteralPartCS;
import org.xtext.example.mydsl.myOcl.TupleTypeCS;
import org.xtext.example.mydsl.myOcl.TypeExpCS;
import org.xtext.example.mydsl.myOcl.TypeLiteralCS;
import org.xtext.example.mydsl.myOcl.TypeLiteralExpCS;
import org.xtext.example.mydsl.myOcl.TypeNameExpCS;
import org.xtext.example.mydsl.myOcl.TypeParameterCS;
import org.xtext.example.mydsl.myOcl.TypedRefCS;
import org.xtext.example.mydsl.myOcl.URIPathNameCS;
import org.xtext.example.mydsl.myOcl.UnaryOperatorCS;
import org.xtext.example.mydsl.myOcl.UnlimitedNaturalLiteralExpCS;
import org.xtext.example.mydsl.myOcl.pathNameCS;
import org.xtext.example.mydsl.myOcl.tuplePartCS;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyOclPackageImpl extends EPackageImpl implements MyOclPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass completeOCLDocumentCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass classifierContextDeclCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constraintCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contextDeclCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass defCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass defOperationCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass defParameterCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass defPropertyCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uriPathNameCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationContextDeclCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass packageDeclarationCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass propertyContextDeclCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass specificationCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pathNameCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass templateSignatureCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeParameterCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typedRefCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigatingArgExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveTypeCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass collectionTypeCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tupleTypeCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tuplePartCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass collectionLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass collectionLiteralPartCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tupleLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tupleLiteralPartCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass numberLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unlimitedNaturalLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass invalidLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nullLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeLiteralCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeLiteralExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeNameExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigatingArgCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigatingBarArgCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigatingCommaArgCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigatingSemiArgCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ifExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass letExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass letVariableCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nestedExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selfExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primaryExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nameExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass infixedExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass binaryOperatorCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass infixOperatorCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigationOperatorCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass prefixedExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unaryOperatorCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass indexExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigatingExpCS_BaseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass navigatingExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass oclMessageArgCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass infixExpCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass prefixExpCSEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.mydsl.myOcl.MyOclPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MyOclPackageImpl()
  {
    super(eNS_URI, MyOclFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link MyOclPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MyOclPackage init()
  {
    if (isInited) return (MyOclPackage)EPackage.Registry.INSTANCE.getEPackage(MyOclPackage.eNS_URI);

    // Obtain or create and register package
    MyOclPackageImpl theMyOclPackage = (MyOclPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof MyOclPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new MyOclPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theMyOclPackage.createPackageContents();

    // Initialize created meta-data
    theMyOclPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMyOclPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MyOclPackage.eNS_URI, theMyOclPackage);
    return theMyOclPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCompleteOCLDocumentCS()
  {
    return completeOCLDocumentCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCompleteOCLDocumentCS_OwnedImports()
  {
    return (EReference)completeOCLDocumentCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCompleteOCLDocumentCS_OwnedPackages()
  {
    return (EReference)completeOCLDocumentCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCompleteOCLDocumentCS_OwnedContexts()
  {
    return (EReference)completeOCLDocumentCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getClassifierContextDeclCS()
  {
    return classifierContextDeclCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getClassifierContextDeclCS_OwnedSignature()
  {
    return (EReference)classifierContextDeclCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getClassifierContextDeclCS_SelfName()
  {
    return (EAttribute)classifierContextDeclCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getClassifierContextDeclCS_OwnedInvariants()
  {
    return (EReference)classifierContextDeclCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getClassifierContextDeclCS_OwnedDefinitions()
  {
    return (EReference)classifierContextDeclCSEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConstraintCS()
  {
    return constraintCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getConstraintCS_Name()
  {
    return (EAttribute)constraintCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConstraintCS_OwnedMessageSpecification()
  {
    return (EReference)constraintCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConstraintCS_OwnedSpecification()
  {
    return (EReference)constraintCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getContextDeclCS()
  {
    return contextDeclCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getContextDeclCS_OwnedPathName()
  {
    return (EReference)contextDeclCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDefCS()
  {
    return defCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDefCS_IsStatic()
  {
    return (EAttribute)defCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDefCS_Name()
  {
    return (EAttribute)defCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDefCS_OwnedType()
  {
    return (EReference)defCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDefCS_OwnedSpecification()
  {
    return (EReference)defCSEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDefOperationCS()
  {
    return defOperationCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDefOperationCS_OwnedSignature()
  {
    return (EReference)defOperationCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDefOperationCS_OwnedParameters()
  {
    return (EReference)defOperationCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDefParameterCS()
  {
    return defParameterCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDefParameterCS_Name()
  {
    return (EAttribute)defParameterCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDefParameterCS_OwnedType()
  {
    return (EReference)defParameterCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDefPropertyCS()
  {
    return defPropertyCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImportCS()
  {
    return importCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getImportCS_Name()
  {
    return (EAttribute)importCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getImportCS_OwnedPathName()
  {
    return (EReference)importCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getImportCS_IsAll()
  {
    return (EAttribute)importCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getURIPathNameCS()
  {
    return uriPathNameCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOperationContextDeclCS()
  {
    return operationContextDeclCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationContextDeclCS_OwnedSignature()
  {
    return (EReference)operationContextDeclCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationContextDeclCS_OwnedParameters()
  {
    return (EReference)operationContextDeclCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationContextDeclCS_OwnedType()
  {
    return (EReference)operationContextDeclCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationContextDeclCS_OwnedPreconditions()
  {
    return (EReference)operationContextDeclCSEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationContextDeclCS_OwnedPostconditions()
  {
    return (EReference)operationContextDeclCSEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getOperationContextDeclCS_OwnedBodies()
  {
    return (EReference)operationContextDeclCSEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPackageDeclarationCS()
  {
    return packageDeclarationCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPackageDeclarationCS_OwnedPathName()
  {
    return (EReference)packageDeclarationCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPackageDeclarationCS_OwnedInvariants()
  {
    return (EReference)packageDeclarationCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPackageDeclarationCS_OwnedContexts()
  {
    return (EReference)packageDeclarationCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getParameterCS()
  {
    return parameterCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getParameterCS_Name()
  {
    return (EAttribute)parameterCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getParameterCS_OwnedType()
  {
    return (EReference)parameterCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPropertyContextDeclCS()
  {
    return propertyContextDeclCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPropertyContextDeclCS_OwnedType()
  {
    return (EReference)propertyContextDeclCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPropertyContextDeclCS_OwnedDerivedInvariants()
  {
    return (EReference)propertyContextDeclCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPropertyContextDeclCS_OwnedDefaultExpressions()
  {
    return (EReference)propertyContextDeclCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSpecificationCS()
  {
    return specificationCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSpecificationCS_OwnedExpression()
  {
    return (EReference)specificationCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSpecificationCS_ExprString()
  {
    return (EAttribute)specificationCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getpathNameCS()
  {
    return pathNameCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getpathNameCS_Name()
  {
    return (EAttribute)pathNameCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTemplateSignatureCS()
  {
    return templateSignatureCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTemplateSignatureCS_OwnedParameters()
  {
    return (EReference)templateSignatureCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeParameterCS()
  {
    return typeParameterCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypedRefCS()
  {
    return typedRefCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNavigatingArgExpCS()
  {
    return navigatingArgExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrimitiveTypeCS()
  {
    return primitiveTypeCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCollectionTypeCS()
  {
    return collectionTypeCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCollectionTypeCS_OwnedType()
  {
    return (EReference)collectionTypeCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTupleTypeCS()
  {
    return tupleTypeCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTupleTypeCS_OwnedParts()
  {
    return (EReference)tupleTypeCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTupleTypeCS_Backtrack()
  {
    return (EAttribute)tupleTypeCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettuplePartCS()
  {
    return tuplePartCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettuplePartCS_Name()
  {
    return (EAttribute)tuplePartCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettuplePartCS_OwnedType()
  {
    return (EReference)tuplePartCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCollectionLiteralExpCS()
  {
    return collectionLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCollectionLiteralExpCS_OwnedType()
  {
    return (EReference)collectionLiteralExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCollectionLiteralExpCS_OwnedParts()
  {
    return (EReference)collectionLiteralExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCollectionLiteralPartCS()
  {
    return collectionLiteralPartCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCollectionLiteralPartCS_ExpressionCS()
  {
    return (EReference)collectionLiteralPartCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCollectionLiteralPartCS_LastExpressionCS()
  {
    return (EReference)collectionLiteralPartCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrimitiveLiteralExpCS()
  {
    return primitiveLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTupleLiteralExpCS()
  {
    return tupleLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTupleLiteralExpCS_OwnedParts()
  {
    return (EReference)tupleLiteralExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTupleLiteralPartCS()
  {
    return tupleLiteralPartCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTupleLiteralPartCS_Name()
  {
    return (EAttribute)tupleLiteralPartCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTupleLiteralPartCS_OwnedType()
  {
    return (EReference)tupleLiteralPartCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTupleLiteralPartCS_InitExpression()
  {
    return (EReference)tupleLiteralPartCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNumberLiteralExpCS()
  {
    return numberLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNumberLiteralExpCS_Name()
  {
    return (EAttribute)numberLiteralExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStringLiteralExpCS()
  {
    return stringLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStringLiteralExpCS_Name()
  {
    return (EAttribute)stringLiteralExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBooleanLiteralExpCS()
  {
    return booleanLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBooleanLiteralExpCS_Name()
  {
    return (EAttribute)booleanLiteralExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUnlimitedNaturalLiteralExpCS()
  {
    return unlimitedNaturalLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInvalidLiteralExpCS()
  {
    return invalidLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNullLiteralExpCS()
  {
    return nullLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeLiteralCS()
  {
    return typeLiteralCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypeLiteralCS_Name()
  {
    return (EAttribute)typeLiteralCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeLiteralExpCS()
  {
    return typeLiteralExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTypeLiteralExpCS_OwnedType()
  {
    return (EReference)typeLiteralExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeNameExpCS()
  {
    return typeNameExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypeNameExpCS_Namespace()
  {
    return (EAttribute)typeNameExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypeNameExpCS_Element()
  {
    return (EAttribute)typeNameExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeExpCS()
  {
    return typeExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNavigatingArgCS()
  {
    return navigatingArgCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingArgCS_Name()
  {
    return (EReference)navigatingArgCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingArgCS_OwnedType()
  {
    return (EReference)navigatingArgCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingArgCS_Init()
  {
    return (EReference)navigatingArgCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNavigatingBarArgCS()
  {
    return navigatingBarArgCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNavigatingBarArgCS_Prefix()
  {
    return (EAttribute)navigatingBarArgCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingBarArgCS_Name()
  {
    return (EReference)navigatingBarArgCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingBarArgCS_OwnedType()
  {
    return (EReference)navigatingBarArgCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingBarArgCS_Init()
  {
    return (EReference)navigatingBarArgCSEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNavigatingCommaArgCS()
  {
    return navigatingCommaArgCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNavigatingCommaArgCS_Prefix()
  {
    return (EAttribute)navigatingCommaArgCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingCommaArgCS_Name()
  {
    return (EReference)navigatingCommaArgCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingCommaArgCS_OwnedType()
  {
    return (EReference)navigatingCommaArgCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingCommaArgCS_Init()
  {
    return (EReference)navigatingCommaArgCSEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNavigatingSemiArgCS()
  {
    return navigatingSemiArgCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNavigatingSemiArgCS_Prefix()
  {
    return (EAttribute)navigatingSemiArgCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingSemiArgCS_Name()
  {
    return (EReference)navigatingSemiArgCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingSemiArgCS_OwnedType()
  {
    return (EReference)navigatingSemiArgCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingSemiArgCS_Init()
  {
    return (EReference)navigatingSemiArgCSEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIfExpCS()
  {
    return ifExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIfExpCS_Condition()
  {
    return (EReference)ifExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIfExpCS_ThenExpression()
  {
    return (EReference)ifExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIfExpCS_ElseExpression()
  {
    return (EReference)ifExpCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLetExpCS()
  {
    return letExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLetExpCS_Variable()
  {
    return (EReference)letExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLetExpCS_In()
  {
    return (EReference)letExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLetVariableCS()
  {
    return letVariableCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLetVariableCS_Name()
  {
    return (EAttribute)letVariableCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLetVariableCS_OwnedType()
  {
    return (EReference)letVariableCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLetVariableCS_InitExpression()
  {
    return (EReference)letVariableCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNestedExpCS()
  {
    return nestedExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNestedExpCS_Source()
  {
    return (EReference)nestedExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSelfExpCS()
  {
    return selfExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrimaryExpCS()
  {
    return primaryExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNameExpCS()
  {
    return nameExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNameExpCS_Namespace()
  {
    return (EAttribute)nameExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNameExpCS_Element()
  {
    return (EAttribute)nameExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExpCS()
  {
    return expCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInfixedExpCS()
  {
    return infixedExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBinaryOperatorCS()
  {
    return binaryOperatorCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getBinaryOperatorCS_Name()
  {
    return (EAttribute)binaryOperatorCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInfixOperatorCS()
  {
    return infixOperatorCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNavigationOperatorCS()
  {
    return navigationOperatorCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrefixedExpCS()
  {
    return prefixedExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUnaryOperatorCS()
  {
    return unaryOperatorCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getUnaryOperatorCS_Name()
  {
    return (EAttribute)unaryOperatorCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIndexExpCS()
  {
    return indexExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexExpCS_FirstIndexes()
  {
    return (EReference)indexExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIndexExpCS_SecondIndexes()
  {
    return (EReference)indexExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNavigatingExpCS_Base()
  {
    return navigatingExpCS_BaseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNavigatingExpCS()
  {
    return navigatingExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingExpCS_NamedExp()
  {
    return (EReference)navigatingExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNavigatingExpCS_Argument()
  {
    return (EReference)navigatingExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getOCLMessageArgCS()
  {
    return oclMessageArgCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInfixExpCS()
  {
    return infixExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getInfixExpCS_OwnedExpression()
  {
    return (EReference)infixExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getInfixExpCS_OwnedOperator()
  {
    return (EReference)infixExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrefixExpCS()
  {
    return prefixExpCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPrefixExpCS_OwnedOperator()
  {
    return (EReference)prefixExpCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPrefixExpCS_OwnedExpression()
  {
    return (EReference)prefixExpCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyOclFactory getMyOclFactory()
  {
    return (MyOclFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    completeOCLDocumentCSEClass = createEClass(COMPLETE_OCL_DOCUMENT_CS);
    createEReference(completeOCLDocumentCSEClass, COMPLETE_OCL_DOCUMENT_CS__OWNED_IMPORTS);
    createEReference(completeOCLDocumentCSEClass, COMPLETE_OCL_DOCUMENT_CS__OWNED_PACKAGES);
    createEReference(completeOCLDocumentCSEClass, COMPLETE_OCL_DOCUMENT_CS__OWNED_CONTEXTS);

    classifierContextDeclCSEClass = createEClass(CLASSIFIER_CONTEXT_DECL_CS);
    createEReference(classifierContextDeclCSEClass, CLASSIFIER_CONTEXT_DECL_CS__OWNED_SIGNATURE);
    createEAttribute(classifierContextDeclCSEClass, CLASSIFIER_CONTEXT_DECL_CS__SELF_NAME);
    createEReference(classifierContextDeclCSEClass, CLASSIFIER_CONTEXT_DECL_CS__OWNED_INVARIANTS);
    createEReference(classifierContextDeclCSEClass, CLASSIFIER_CONTEXT_DECL_CS__OWNED_DEFINITIONS);

    constraintCSEClass = createEClass(CONSTRAINT_CS);
    createEAttribute(constraintCSEClass, CONSTRAINT_CS__NAME);
    createEReference(constraintCSEClass, CONSTRAINT_CS__OWNED_MESSAGE_SPECIFICATION);
    createEReference(constraintCSEClass, CONSTRAINT_CS__OWNED_SPECIFICATION);

    contextDeclCSEClass = createEClass(CONTEXT_DECL_CS);
    createEReference(contextDeclCSEClass, CONTEXT_DECL_CS__OWNED_PATH_NAME);

    defCSEClass = createEClass(DEF_CS);
    createEAttribute(defCSEClass, DEF_CS__IS_STATIC);
    createEAttribute(defCSEClass, DEF_CS__NAME);
    createEReference(defCSEClass, DEF_CS__OWNED_TYPE);
    createEReference(defCSEClass, DEF_CS__OWNED_SPECIFICATION);

    defOperationCSEClass = createEClass(DEF_OPERATION_CS);
    createEReference(defOperationCSEClass, DEF_OPERATION_CS__OWNED_SIGNATURE);
    createEReference(defOperationCSEClass, DEF_OPERATION_CS__OWNED_PARAMETERS);

    defParameterCSEClass = createEClass(DEF_PARAMETER_CS);
    createEAttribute(defParameterCSEClass, DEF_PARAMETER_CS__NAME);
    createEReference(defParameterCSEClass, DEF_PARAMETER_CS__OWNED_TYPE);

    defPropertyCSEClass = createEClass(DEF_PROPERTY_CS);

    importCSEClass = createEClass(IMPORT_CS);
    createEAttribute(importCSEClass, IMPORT_CS__NAME);
    createEReference(importCSEClass, IMPORT_CS__OWNED_PATH_NAME);
    createEAttribute(importCSEClass, IMPORT_CS__IS_ALL);

    uriPathNameCSEClass = createEClass(URI_PATH_NAME_CS);

    operationContextDeclCSEClass = createEClass(OPERATION_CONTEXT_DECL_CS);
    createEReference(operationContextDeclCSEClass, OPERATION_CONTEXT_DECL_CS__OWNED_SIGNATURE);
    createEReference(operationContextDeclCSEClass, OPERATION_CONTEXT_DECL_CS__OWNED_PARAMETERS);
    createEReference(operationContextDeclCSEClass, OPERATION_CONTEXT_DECL_CS__OWNED_TYPE);
    createEReference(operationContextDeclCSEClass, OPERATION_CONTEXT_DECL_CS__OWNED_PRECONDITIONS);
    createEReference(operationContextDeclCSEClass, OPERATION_CONTEXT_DECL_CS__OWNED_POSTCONDITIONS);
    createEReference(operationContextDeclCSEClass, OPERATION_CONTEXT_DECL_CS__OWNED_BODIES);

    packageDeclarationCSEClass = createEClass(PACKAGE_DECLARATION_CS);
    createEReference(packageDeclarationCSEClass, PACKAGE_DECLARATION_CS__OWNED_PATH_NAME);
    createEReference(packageDeclarationCSEClass, PACKAGE_DECLARATION_CS__OWNED_INVARIANTS);
    createEReference(packageDeclarationCSEClass, PACKAGE_DECLARATION_CS__OWNED_CONTEXTS);

    parameterCSEClass = createEClass(PARAMETER_CS);
    createEAttribute(parameterCSEClass, PARAMETER_CS__NAME);
    createEReference(parameterCSEClass, PARAMETER_CS__OWNED_TYPE);

    propertyContextDeclCSEClass = createEClass(PROPERTY_CONTEXT_DECL_CS);
    createEReference(propertyContextDeclCSEClass, PROPERTY_CONTEXT_DECL_CS__OWNED_TYPE);
    createEReference(propertyContextDeclCSEClass, PROPERTY_CONTEXT_DECL_CS__OWNED_DERIVED_INVARIANTS);
    createEReference(propertyContextDeclCSEClass, PROPERTY_CONTEXT_DECL_CS__OWNED_DEFAULT_EXPRESSIONS);

    specificationCSEClass = createEClass(SPECIFICATION_CS);
    createEReference(specificationCSEClass, SPECIFICATION_CS__OWNED_EXPRESSION);
    createEAttribute(specificationCSEClass, SPECIFICATION_CS__EXPR_STRING);

    pathNameCSEClass = createEClass(PATH_NAME_CS);
    createEAttribute(pathNameCSEClass, PATH_NAME_CS__NAME);

    templateSignatureCSEClass = createEClass(TEMPLATE_SIGNATURE_CS);
    createEReference(templateSignatureCSEClass, TEMPLATE_SIGNATURE_CS__OWNED_PARAMETERS);

    typeParameterCSEClass = createEClass(TYPE_PARAMETER_CS);

    typedRefCSEClass = createEClass(TYPED_REF_CS);

    navigatingArgExpCSEClass = createEClass(NAVIGATING_ARG_EXP_CS);

    primitiveTypeCSEClass = createEClass(PRIMITIVE_TYPE_CS);

    collectionTypeCSEClass = createEClass(COLLECTION_TYPE_CS);
    createEReference(collectionTypeCSEClass, COLLECTION_TYPE_CS__OWNED_TYPE);

    tupleTypeCSEClass = createEClass(TUPLE_TYPE_CS);
    createEReference(tupleTypeCSEClass, TUPLE_TYPE_CS__OWNED_PARTS);
    createEAttribute(tupleTypeCSEClass, TUPLE_TYPE_CS__BACKTRACK);

    tuplePartCSEClass = createEClass(TUPLE_PART_CS);
    createEAttribute(tuplePartCSEClass, TUPLE_PART_CS__NAME);
    createEReference(tuplePartCSEClass, TUPLE_PART_CS__OWNED_TYPE);

    collectionLiteralExpCSEClass = createEClass(COLLECTION_LITERAL_EXP_CS);
    createEReference(collectionLiteralExpCSEClass, COLLECTION_LITERAL_EXP_CS__OWNED_TYPE);
    createEReference(collectionLiteralExpCSEClass, COLLECTION_LITERAL_EXP_CS__OWNED_PARTS);

    collectionLiteralPartCSEClass = createEClass(COLLECTION_LITERAL_PART_CS);
    createEReference(collectionLiteralPartCSEClass, COLLECTION_LITERAL_PART_CS__EXPRESSION_CS);
    createEReference(collectionLiteralPartCSEClass, COLLECTION_LITERAL_PART_CS__LAST_EXPRESSION_CS);

    primitiveLiteralExpCSEClass = createEClass(PRIMITIVE_LITERAL_EXP_CS);

    tupleLiteralExpCSEClass = createEClass(TUPLE_LITERAL_EXP_CS);
    createEReference(tupleLiteralExpCSEClass, TUPLE_LITERAL_EXP_CS__OWNED_PARTS);

    tupleLiteralPartCSEClass = createEClass(TUPLE_LITERAL_PART_CS);
    createEAttribute(tupleLiteralPartCSEClass, TUPLE_LITERAL_PART_CS__NAME);
    createEReference(tupleLiteralPartCSEClass, TUPLE_LITERAL_PART_CS__OWNED_TYPE);
    createEReference(tupleLiteralPartCSEClass, TUPLE_LITERAL_PART_CS__INIT_EXPRESSION);

    numberLiteralExpCSEClass = createEClass(NUMBER_LITERAL_EXP_CS);
    createEAttribute(numberLiteralExpCSEClass, NUMBER_LITERAL_EXP_CS__NAME);

    stringLiteralExpCSEClass = createEClass(STRING_LITERAL_EXP_CS);
    createEAttribute(stringLiteralExpCSEClass, STRING_LITERAL_EXP_CS__NAME);

    booleanLiteralExpCSEClass = createEClass(BOOLEAN_LITERAL_EXP_CS);
    createEAttribute(booleanLiteralExpCSEClass, BOOLEAN_LITERAL_EXP_CS__NAME);

    unlimitedNaturalLiteralExpCSEClass = createEClass(UNLIMITED_NATURAL_LITERAL_EXP_CS);

    invalidLiteralExpCSEClass = createEClass(INVALID_LITERAL_EXP_CS);

    nullLiteralExpCSEClass = createEClass(NULL_LITERAL_EXP_CS);

    typeLiteralCSEClass = createEClass(TYPE_LITERAL_CS);
    createEAttribute(typeLiteralCSEClass, TYPE_LITERAL_CS__NAME);

    typeLiteralExpCSEClass = createEClass(TYPE_LITERAL_EXP_CS);
    createEReference(typeLiteralExpCSEClass, TYPE_LITERAL_EXP_CS__OWNED_TYPE);

    typeNameExpCSEClass = createEClass(TYPE_NAME_EXP_CS);
    createEAttribute(typeNameExpCSEClass, TYPE_NAME_EXP_CS__NAMESPACE);
    createEAttribute(typeNameExpCSEClass, TYPE_NAME_EXP_CS__ELEMENT);

    typeExpCSEClass = createEClass(TYPE_EXP_CS);

    navigatingArgCSEClass = createEClass(NAVIGATING_ARG_CS);
    createEReference(navigatingArgCSEClass, NAVIGATING_ARG_CS__NAME);
    createEReference(navigatingArgCSEClass, NAVIGATING_ARG_CS__OWNED_TYPE);
    createEReference(navigatingArgCSEClass, NAVIGATING_ARG_CS__INIT);

    navigatingBarArgCSEClass = createEClass(NAVIGATING_BAR_ARG_CS);
    createEAttribute(navigatingBarArgCSEClass, NAVIGATING_BAR_ARG_CS__PREFIX);
    createEReference(navigatingBarArgCSEClass, NAVIGATING_BAR_ARG_CS__NAME);
    createEReference(navigatingBarArgCSEClass, NAVIGATING_BAR_ARG_CS__OWNED_TYPE);
    createEReference(navigatingBarArgCSEClass, NAVIGATING_BAR_ARG_CS__INIT);

    navigatingCommaArgCSEClass = createEClass(NAVIGATING_COMMA_ARG_CS);
    createEAttribute(navigatingCommaArgCSEClass, NAVIGATING_COMMA_ARG_CS__PREFIX);
    createEReference(navigatingCommaArgCSEClass, NAVIGATING_COMMA_ARG_CS__NAME);
    createEReference(navigatingCommaArgCSEClass, NAVIGATING_COMMA_ARG_CS__OWNED_TYPE);
    createEReference(navigatingCommaArgCSEClass, NAVIGATING_COMMA_ARG_CS__INIT);

    navigatingSemiArgCSEClass = createEClass(NAVIGATING_SEMI_ARG_CS);
    createEAttribute(navigatingSemiArgCSEClass, NAVIGATING_SEMI_ARG_CS__PREFIX);
    createEReference(navigatingSemiArgCSEClass, NAVIGATING_SEMI_ARG_CS__NAME);
    createEReference(navigatingSemiArgCSEClass, NAVIGATING_SEMI_ARG_CS__OWNED_TYPE);
    createEReference(navigatingSemiArgCSEClass, NAVIGATING_SEMI_ARG_CS__INIT);

    ifExpCSEClass = createEClass(IF_EXP_CS);
    createEReference(ifExpCSEClass, IF_EXP_CS__CONDITION);
    createEReference(ifExpCSEClass, IF_EXP_CS__THEN_EXPRESSION);
    createEReference(ifExpCSEClass, IF_EXP_CS__ELSE_EXPRESSION);

    letExpCSEClass = createEClass(LET_EXP_CS);
    createEReference(letExpCSEClass, LET_EXP_CS__VARIABLE);
    createEReference(letExpCSEClass, LET_EXP_CS__IN);

    letVariableCSEClass = createEClass(LET_VARIABLE_CS);
    createEAttribute(letVariableCSEClass, LET_VARIABLE_CS__NAME);
    createEReference(letVariableCSEClass, LET_VARIABLE_CS__OWNED_TYPE);
    createEReference(letVariableCSEClass, LET_VARIABLE_CS__INIT_EXPRESSION);

    nestedExpCSEClass = createEClass(NESTED_EXP_CS);
    createEReference(nestedExpCSEClass, NESTED_EXP_CS__SOURCE);

    selfExpCSEClass = createEClass(SELF_EXP_CS);

    primaryExpCSEClass = createEClass(PRIMARY_EXP_CS);

    nameExpCSEClass = createEClass(NAME_EXP_CS);
    createEAttribute(nameExpCSEClass, NAME_EXP_CS__NAMESPACE);
    createEAttribute(nameExpCSEClass, NAME_EXP_CS__ELEMENT);

    expCSEClass = createEClass(EXP_CS);

    infixedExpCSEClass = createEClass(INFIXED_EXP_CS);

    binaryOperatorCSEClass = createEClass(BINARY_OPERATOR_CS);
    createEAttribute(binaryOperatorCSEClass, BINARY_OPERATOR_CS__NAME);

    infixOperatorCSEClass = createEClass(INFIX_OPERATOR_CS);

    navigationOperatorCSEClass = createEClass(NAVIGATION_OPERATOR_CS);

    prefixedExpCSEClass = createEClass(PREFIXED_EXP_CS);

    unaryOperatorCSEClass = createEClass(UNARY_OPERATOR_CS);
    createEAttribute(unaryOperatorCSEClass, UNARY_OPERATOR_CS__NAME);

    indexExpCSEClass = createEClass(INDEX_EXP_CS);
    createEReference(indexExpCSEClass, INDEX_EXP_CS__FIRST_INDEXES);
    createEReference(indexExpCSEClass, INDEX_EXP_CS__SECOND_INDEXES);

    navigatingExpCS_BaseEClass = createEClass(NAVIGATING_EXP_CS_BASE);

    navigatingExpCSEClass = createEClass(NAVIGATING_EXP_CS);
    createEReference(navigatingExpCSEClass, NAVIGATING_EXP_CS__NAMED_EXP);
    createEReference(navigatingExpCSEClass, NAVIGATING_EXP_CS__ARGUMENT);

    oclMessageArgCSEClass = createEClass(OCL_MESSAGE_ARG_CS);

    infixExpCSEClass = createEClass(INFIX_EXP_CS);
    createEReference(infixExpCSEClass, INFIX_EXP_CS__OWNED_EXPRESSION);
    createEReference(infixExpCSEClass, INFIX_EXP_CS__OWNED_OPERATOR);

    prefixExpCSEClass = createEClass(PREFIX_EXP_CS);
    createEReference(prefixExpCSEClass, PREFIX_EXP_CS__OWNED_OPERATOR);
    createEReference(prefixExpCSEClass, PREFIX_EXP_CS__OWNED_EXPRESSION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    classifierContextDeclCSEClass.getESuperTypes().add(this.getContextDeclCS());
    defOperationCSEClass.getESuperTypes().add(this.getDefCS());
    defPropertyCSEClass.getESuperTypes().add(this.getDefCS());
    operationContextDeclCSEClass.getESuperTypes().add(this.getContextDeclCS());
    propertyContextDeclCSEClass.getESuperTypes().add(this.getContextDeclCS());
    pathNameCSEClass.getESuperTypes().add(this.getURIPathNameCS());
    primitiveTypeCSEClass.getESuperTypes().add(this.getTypeParameterCS());
    primitiveTypeCSEClass.getESuperTypes().add(this.getTypeLiteralCS());
    collectionTypeCSEClass.getESuperTypes().add(this.getTypeLiteralCS());
    tupleTypeCSEClass.getESuperTypes().add(this.getTypeLiteralCS());
    collectionLiteralExpCSEClass.getESuperTypes().add(this.getPrimaryExpCS());
    primitiveLiteralExpCSEClass.getESuperTypes().add(this.getPrimaryExpCS());
    tupleLiteralExpCSEClass.getESuperTypes().add(this.getPrimaryExpCS());
    numberLiteralExpCSEClass.getESuperTypes().add(this.getPrimitiveLiteralExpCS());
    stringLiteralExpCSEClass.getESuperTypes().add(this.getPrimitiveLiteralExpCS());
    booleanLiteralExpCSEClass.getESuperTypes().add(this.getPrimitiveLiteralExpCS());
    unlimitedNaturalLiteralExpCSEClass.getESuperTypes().add(this.getPrimitiveLiteralExpCS());
    invalidLiteralExpCSEClass.getESuperTypes().add(this.getPrimitiveLiteralExpCS());
    nullLiteralExpCSEClass.getESuperTypes().add(this.getPrimitiveLiteralExpCS());
    typeLiteralCSEClass.getESuperTypes().add(this.getTypedRefCS());
    typeLiteralCSEClass.getESuperTypes().add(this.getTypeExpCS());
    typeNameExpCSEClass.getESuperTypes().add(this.getTypeExpCS());
    ifExpCSEClass.getESuperTypes().add(this.getPrimaryExpCS());
    letExpCSEClass.getESuperTypes().add(this.getPrimaryExpCS());
    nestedExpCSEClass.getESuperTypes().add(this.getPrimaryExpCS());
    selfExpCSEClass.getESuperTypes().add(this.getPrimaryExpCS());
    primaryExpCSEClass.getESuperTypes().add(this.getPrefixedExpCS());
    nameExpCSEClass.getESuperTypes().add(this.getIndexExpCS());
    expCSEClass.getESuperTypes().add(this.getNavigatingArgExpCS());
    infixedExpCSEClass.getESuperTypes().add(this.getExpCS());
    infixOperatorCSEClass.getESuperTypes().add(this.getBinaryOperatorCS());
    navigationOperatorCSEClass.getESuperTypes().add(this.getBinaryOperatorCS());
    prefixedExpCSEClass.getESuperTypes().add(this.getInfixedExpCS());
    indexExpCSEClass.getESuperTypes().add(this.getNavigatingExpCS_Base());
    navigatingExpCS_BaseEClass.getESuperTypes().add(this.getNavigatingExpCS());
    navigatingExpCSEClass.getESuperTypes().add(this.getPrimaryExpCS());
    oclMessageArgCSEClass.getESuperTypes().add(this.getNavigatingArgExpCS());
    infixExpCSEClass.getESuperTypes().add(this.getInfixedExpCS());
    prefixExpCSEClass.getESuperTypes().add(this.getPrefixedExpCS());

    // Initialize classes and features; add operations and parameters
    initEClass(completeOCLDocumentCSEClass, CompleteOCLDocumentCS.class, "CompleteOCLDocumentCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCompleteOCLDocumentCS_OwnedImports(), this.getImportCS(), null, "ownedImports", null, 0, -1, CompleteOCLDocumentCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCompleteOCLDocumentCS_OwnedPackages(), this.getPackageDeclarationCS(), null, "ownedPackages", null, 0, -1, CompleteOCLDocumentCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCompleteOCLDocumentCS_OwnedContexts(), this.getContextDeclCS(), null, "ownedContexts", null, 0, -1, CompleteOCLDocumentCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(classifierContextDeclCSEClass, ClassifierContextDeclCS.class, "ClassifierContextDeclCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getClassifierContextDeclCS_OwnedSignature(), this.getTemplateSignatureCS(), null, "ownedSignature", null, 0, 1, ClassifierContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getClassifierContextDeclCS_SelfName(), ecorePackage.getEString(), "selfName", null, 0, 1, ClassifierContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getClassifierContextDeclCS_OwnedInvariants(), this.getConstraintCS(), null, "ownedInvariants", null, 0, -1, ClassifierContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getClassifierContextDeclCS_OwnedDefinitions(), this.getDefCS(), null, "ownedDefinitions", null, 0, -1, ClassifierContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constraintCSEClass, ConstraintCS.class, "ConstraintCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConstraintCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, ConstraintCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConstraintCS_OwnedMessageSpecification(), this.getSpecificationCS(), null, "ownedMessageSpecification", null, 0, 1, ConstraintCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConstraintCS_OwnedSpecification(), this.getSpecificationCS(), null, "ownedSpecification", null, 0, 1, ConstraintCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contextDeclCSEClass, ContextDeclCS.class, "ContextDeclCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContextDeclCS_OwnedPathName(), this.getpathNameCS(), null, "ownedPathName", null, 0, 1, ContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(defCSEClass, DefCS.class, "DefCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDefCS_IsStatic(), ecorePackage.getEBoolean(), "isStatic", null, 0, 1, DefCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDefCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, DefCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDefCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, DefCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDefCS_OwnedSpecification(), this.getSpecificationCS(), null, "ownedSpecification", null, 0, 1, DefCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(defOperationCSEClass, DefOperationCS.class, "DefOperationCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDefOperationCS_OwnedSignature(), this.getTemplateSignatureCS(), null, "ownedSignature", null, 0, 1, DefOperationCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDefOperationCS_OwnedParameters(), this.getDefParameterCS(), null, "ownedParameters", null, 0, -1, DefOperationCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(defParameterCSEClass, DefParameterCS.class, "DefParameterCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDefParameterCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, DefParameterCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDefParameterCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, DefParameterCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(defPropertyCSEClass, DefPropertyCS.class, "DefPropertyCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(importCSEClass, ImportCS.class, "ImportCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImportCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, ImportCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getImportCS_OwnedPathName(), this.getURIPathNameCS(), null, "ownedPathName", null, 0, 1, ImportCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getImportCS_IsAll(), ecorePackage.getEBoolean(), "isAll", null, 0, 1, ImportCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(uriPathNameCSEClass, URIPathNameCS.class, "URIPathNameCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(operationContextDeclCSEClass, OperationContextDeclCS.class, "OperationContextDeclCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOperationContextDeclCS_OwnedSignature(), this.getTemplateSignatureCS(), null, "ownedSignature", null, 0, 1, OperationContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationContextDeclCS_OwnedParameters(), this.getParameterCS(), null, "ownedParameters", null, 0, -1, OperationContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationContextDeclCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, OperationContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationContextDeclCS_OwnedPreconditions(), this.getConstraintCS(), null, "ownedPreconditions", null, 0, -1, OperationContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationContextDeclCS_OwnedPostconditions(), this.getConstraintCS(), null, "ownedPostconditions", null, 0, -1, OperationContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOperationContextDeclCS_OwnedBodies(), this.getSpecificationCS(), null, "ownedBodies", null, 0, -1, OperationContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(packageDeclarationCSEClass, PackageDeclarationCS.class, "PackageDeclarationCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPackageDeclarationCS_OwnedPathName(), this.getpathNameCS(), null, "ownedPathName", null, 0, 1, PackageDeclarationCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPackageDeclarationCS_OwnedInvariants(), this.getConstraintCS(), null, "ownedInvariants", null, 0, -1, PackageDeclarationCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPackageDeclarationCS_OwnedContexts(), this.getContextDeclCS(), null, "ownedContexts", null, 0, -1, PackageDeclarationCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterCSEClass, ParameterCS.class, "ParameterCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParameterCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, ParameterCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParameterCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, ParameterCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(propertyContextDeclCSEClass, PropertyContextDeclCS.class, "PropertyContextDeclCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPropertyContextDeclCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, PropertyContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPropertyContextDeclCS_OwnedDerivedInvariants(), this.getConstraintCS(), null, "ownedDerivedInvariants", null, 0, -1, PropertyContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPropertyContextDeclCS_OwnedDefaultExpressions(), this.getSpecificationCS(), null, "ownedDefaultExpressions", null, 0, -1, PropertyContextDeclCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(specificationCSEClass, SpecificationCS.class, "SpecificationCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSpecificationCS_OwnedExpression(), this.getExpCS(), null, "ownedExpression", null, 0, 1, SpecificationCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSpecificationCS_ExprString(), ecorePackage.getEString(), "exprString", null, 0, 1, SpecificationCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pathNameCSEClass, pathNameCS.class, "pathNameCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getpathNameCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, pathNameCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(templateSignatureCSEClass, TemplateSignatureCS.class, "TemplateSignatureCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTemplateSignatureCS_OwnedParameters(), this.getTypeParameterCS(), null, "ownedParameters", null, 0, -1, TemplateSignatureCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeParameterCSEClass, TypeParameterCS.class, "TypeParameterCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(typedRefCSEClass, TypedRefCS.class, "TypedRefCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(navigatingArgExpCSEClass, NavigatingArgExpCS.class, "NavigatingArgExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(primitiveTypeCSEClass, PrimitiveTypeCS.class, "PrimitiveTypeCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(collectionTypeCSEClass, CollectionTypeCS.class, "CollectionTypeCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCollectionTypeCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, CollectionTypeCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tupleTypeCSEClass, TupleTypeCS.class, "TupleTypeCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTupleTypeCS_OwnedParts(), this.gettuplePartCS(), null, "ownedParts", null, 0, -1, TupleTypeCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTupleTypeCS_Backtrack(), ecorePackage.getEString(), "backtrack", null, 0, 1, TupleTypeCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tuplePartCSEClass, tuplePartCS.class, "tuplePartCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettuplePartCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, tuplePartCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettuplePartCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, tuplePartCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(collectionLiteralExpCSEClass, CollectionLiteralExpCS.class, "CollectionLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCollectionLiteralExpCS_OwnedType(), this.getCollectionTypeCS(), null, "ownedType", null, 0, 1, CollectionLiteralExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCollectionLiteralExpCS_OwnedParts(), this.getCollectionLiteralPartCS(), null, "ownedParts", null, 0, -1, CollectionLiteralExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(collectionLiteralPartCSEClass, CollectionLiteralPartCS.class, "CollectionLiteralPartCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCollectionLiteralPartCS_ExpressionCS(), this.getExpCS(), null, "expressionCS", null, 0, 1, CollectionLiteralPartCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCollectionLiteralPartCS_LastExpressionCS(), this.getExpCS(), null, "lastExpressionCS", null, 0, 1, CollectionLiteralPartCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primitiveLiteralExpCSEClass, PrimitiveLiteralExpCS.class, "PrimitiveLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tupleLiteralExpCSEClass, TupleLiteralExpCS.class, "TupleLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTupleLiteralExpCS_OwnedParts(), this.getTupleLiteralPartCS(), null, "ownedParts", null, 0, -1, TupleLiteralExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tupleLiteralPartCSEClass, TupleLiteralPartCS.class, "TupleLiteralPartCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTupleLiteralPartCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, TupleLiteralPartCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTupleLiteralPartCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, TupleLiteralPartCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTupleLiteralPartCS_InitExpression(), this.getExpCS(), null, "initExpression", null, 0, 1, TupleLiteralPartCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(numberLiteralExpCSEClass, NumberLiteralExpCS.class, "NumberLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNumberLiteralExpCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, NumberLiteralExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringLiteralExpCSEClass, StringLiteralExpCS.class, "StringLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringLiteralExpCS_Name(), ecorePackage.getEString(), "name", null, 0, -1, StringLiteralExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanLiteralExpCSEClass, BooleanLiteralExpCS.class, "BooleanLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBooleanLiteralExpCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, BooleanLiteralExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unlimitedNaturalLiteralExpCSEClass, UnlimitedNaturalLiteralExpCS.class, "UnlimitedNaturalLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(invalidLiteralExpCSEClass, InvalidLiteralExpCS.class, "InvalidLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(nullLiteralExpCSEClass, NullLiteralExpCS.class, "NullLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(typeLiteralCSEClass, TypeLiteralCS.class, "TypeLiteralCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeLiteralCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, TypeLiteralCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeLiteralExpCSEClass, TypeLiteralExpCS.class, "TypeLiteralExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTypeLiteralExpCS_OwnedType(), this.getTypeLiteralCS(), null, "ownedType", null, 0, 1, TypeLiteralExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeNameExpCSEClass, TypeNameExpCS.class, "TypeNameExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeNameExpCS_Namespace(), ecorePackage.getEString(), "namespace", null, 0, -1, TypeNameExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTypeNameExpCS_Element(), ecorePackage.getEString(), "element", null, 0, 1, TypeNameExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeExpCSEClass, TypeExpCS.class, "TypeExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(navigatingArgCSEClass, NavigatingArgCS.class, "NavigatingArgCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNavigatingArgCS_Name(), this.getNavigatingArgExpCS(), null, "name", null, 0, 1, NavigatingArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingArgCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, NavigatingArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingArgCS_Init(), this.getExpCS(), null, "init", null, 0, 1, NavigatingArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(navigatingBarArgCSEClass, NavigatingBarArgCS.class, "NavigatingBarArgCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNavigatingBarArgCS_Prefix(), ecorePackage.getEString(), "prefix", null, 0, 1, NavigatingBarArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingBarArgCS_Name(), this.getNavigatingArgExpCS(), null, "name", null, 0, 1, NavigatingBarArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingBarArgCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, NavigatingBarArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingBarArgCS_Init(), this.getExpCS(), null, "init", null, 0, 1, NavigatingBarArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(navigatingCommaArgCSEClass, NavigatingCommaArgCS.class, "NavigatingCommaArgCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNavigatingCommaArgCS_Prefix(), ecorePackage.getEString(), "prefix", null, 0, 1, NavigatingCommaArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingCommaArgCS_Name(), this.getNavigatingArgExpCS(), null, "name", null, 0, 1, NavigatingCommaArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingCommaArgCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, NavigatingCommaArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingCommaArgCS_Init(), this.getExpCS(), null, "init", null, 0, 1, NavigatingCommaArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(navigatingSemiArgCSEClass, NavigatingSemiArgCS.class, "NavigatingSemiArgCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNavigatingSemiArgCS_Prefix(), ecorePackage.getEString(), "prefix", null, 0, 1, NavigatingSemiArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingSemiArgCS_Name(), this.getNavigatingArgExpCS(), null, "name", null, 0, 1, NavigatingSemiArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingSemiArgCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, NavigatingSemiArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingSemiArgCS_Init(), this.getExpCS(), null, "init", null, 0, 1, NavigatingSemiArgCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ifExpCSEClass, IfExpCS.class, "IfExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIfExpCS_Condition(), this.getExpCS(), null, "condition", null, 0, 1, IfExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIfExpCS_ThenExpression(), this.getExpCS(), null, "thenExpression", null, 0, 1, IfExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIfExpCS_ElseExpression(), this.getExpCS(), null, "elseExpression", null, 0, 1, IfExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(letExpCSEClass, LetExpCS.class, "LetExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLetExpCS_Variable(), this.getLetVariableCS(), null, "variable", null, 0, -1, LetExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLetExpCS_In(), this.getExpCS(), null, "in", null, 0, 1, LetExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(letVariableCSEClass, LetVariableCS.class, "LetVariableCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLetVariableCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, LetVariableCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLetVariableCS_OwnedType(), this.getTypeExpCS(), null, "ownedType", null, 0, 1, LetVariableCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLetVariableCS_InitExpression(), this.getExpCS(), null, "initExpression", null, 0, 1, LetVariableCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nestedExpCSEClass, NestedExpCS.class, "NestedExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNestedExpCS_Source(), this.getExpCS(), null, "source", null, 0, 1, NestedExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selfExpCSEClass, SelfExpCS.class, "SelfExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(primaryExpCSEClass, PrimaryExpCS.class, "PrimaryExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(nameExpCSEClass, NameExpCS.class, "NameExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNameExpCS_Namespace(), ecorePackage.getEString(), "namespace", null, 0, -1, NameExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNameExpCS_Element(), ecorePackage.getEString(), "element", null, 0, 1, NameExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expCSEClass, ExpCS.class, "ExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(infixedExpCSEClass, InfixedExpCS.class, "InfixedExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(binaryOperatorCSEClass, BinaryOperatorCS.class, "BinaryOperatorCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBinaryOperatorCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, BinaryOperatorCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(infixOperatorCSEClass, InfixOperatorCS.class, "InfixOperatorCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(navigationOperatorCSEClass, NavigationOperatorCS.class, "NavigationOperatorCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(prefixedExpCSEClass, PrefixedExpCS.class, "PrefixedExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(unaryOperatorCSEClass, UnaryOperatorCS.class, "UnaryOperatorCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUnaryOperatorCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, UnaryOperatorCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(indexExpCSEClass, IndexExpCS.class, "IndexExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIndexExpCS_FirstIndexes(), this.getExpCS(), null, "firstIndexes", null, 0, -1, IndexExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIndexExpCS_SecondIndexes(), this.getExpCS(), null, "secondIndexes", null, 0, -1, IndexExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(navigatingExpCS_BaseEClass, NavigatingExpCS_Base.class, "NavigatingExpCS_Base", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(navigatingExpCSEClass, NavigatingExpCS.class, "NavigatingExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNavigatingExpCS_NamedExp(), this.getNavigatingExpCS_Base(), null, "namedExp", null, 0, 1, NavigatingExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNavigatingExpCS_Argument(), ecorePackage.getEObject(), null, "argument", null, 0, -1, NavigatingExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(oclMessageArgCSEClass, OCLMessageArgCS.class, "OCLMessageArgCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(infixExpCSEClass, InfixExpCS.class, "InfixExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInfixExpCS_OwnedExpression(), this.getPrefixedExpCS(), null, "ownedExpression", null, 0, -1, InfixExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInfixExpCS_OwnedOperator(), this.getBinaryOperatorCS(), null, "ownedOperator", null, 0, -1, InfixExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(prefixExpCSEClass, PrefixExpCS.class, "PrefixExpCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrefixExpCS_OwnedOperator(), this.getUnaryOperatorCS(), null, "ownedOperator", null, 0, -1, PrefixExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrefixExpCS_OwnedExpression(), this.getPrimaryExpCS(), null, "ownedExpression", null, 0, 1, PrefixExpCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //MyOclPackageImpl
