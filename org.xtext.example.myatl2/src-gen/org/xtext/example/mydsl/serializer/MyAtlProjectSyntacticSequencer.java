/*
 * generated by Xtext 2.11.0
 */
package org.xtext.example.mydsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.mydsl.services.MyAtlProjectGrammarAccess;

@SuppressWarnings("all")
public class MyAtlProjectSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyAtlProjectGrammarAccess grammarAccess;
	protected AbstractElementAlias match_CalledRule_EntrypointKeyword_0_q;
	protected AbstractElementAlias match_CalledRule___LeftParenthesisKeyword_3_0_RightParenthesisKeyword_3_1__q;
	protected AbstractElementAlias match_CalledRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q;
	protected AbstractElementAlias match_Helper_ContextKeyword_1_q;
	protected AbstractElementAlias match_InPattern___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_1__q;
	protected AbstractElementAlias match_MatchedRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q;
	protected AbstractElementAlias match_SimpleOutPatternElement___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyAtlProjectGrammarAccess) access;
		match_CalledRule_EntrypointKeyword_0_q = new TokenAlias(false, true, grammarAccess.getCalledRuleAccess().getEntrypointKeyword_0());
		match_CalledRule___LeftParenthesisKeyword_3_0_RightParenthesisKeyword_3_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getCalledRuleAccess().getLeftParenthesisKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getCalledRuleAccess().getRightParenthesisKeyword_3_1()));
		match_CalledRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getCalledRuleAccess().getUsingKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getCalledRuleAccess().getLeftCurlyBracketKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getCalledRuleAccess().getRightCurlyBracketKeyword_5_3()));
		match_Helper_ContextKeyword_1_q = new TokenAlias(false, true, grammarAccess.getHelperAccess().getContextKeyword_1());
		match_InPattern___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getInPatternAccess().getLeftParenthesisKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getInPatternAccess().getRightParenthesisKeyword_1_1()));
		match_MatchedRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getMatchedRuleAccess().getUsingKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getMatchedRuleAccess().getLeftCurlyBracketKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getMatchedRuleAccess().getRightCurlyBracketKeyword_5_3()));
		match_SimpleOutPatternElement___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSimpleOutPatternElementAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getSimpleOutPatternElementAccess().getRightParenthesisKeyword_2_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getEssentialOCLUnrestrictedNameRule())
			return getEssentialOCLUnrestrictedNameToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * EssentialOCLUnrestrictedName returns ecore::EString:
	 * 	SIMPLE_ID
	 * ;
	 */
	protected String getEssentialOCLUnrestrictedNameToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_CalledRule_EntrypointKeyword_0_q.equals(syntax))
				emit_CalledRule_EntrypointKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CalledRule___LeftParenthesisKeyword_3_0_RightParenthesisKeyword_3_1__q.equals(syntax))
				emit_CalledRule___LeftParenthesisKeyword_3_0_RightParenthesisKeyword_3_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_CalledRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q.equals(syntax))
				emit_CalledRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Helper_ContextKeyword_1_q.equals(syntax))
				emit_Helper_ContextKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InPattern___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_1__q.equals(syntax))
				emit_InPattern___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_MatchedRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q.equals(syntax))
				emit_MatchedRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SimpleOutPatternElement___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q.equals(syntax))
				emit_SimpleOutPatternElement___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'entrypoint'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'rule' name=UnrestrictedName
	 */
	protected void emit_CalledRule_EntrypointKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=UnrestrictedName (ambiguity) '{' 'using' '{' variables+=RuleVariableDeclaration
	 *     name=UnrestrictedName (ambiguity) '{' ('using' '{' '}')? 'to' outPattern=OutPattern
	 */
	protected void emit_CalledRule___LeftParenthesisKeyword_3_0_RightParenthesisKeyword_3_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('using' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=UnrestrictedName ('(' ')')? '{' (ambiguity) 'to' outPattern=OutPattern
	 */
	protected void emit_CalledRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'context'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'helper' (ambiguity) (rule start)
	 */
	protected void emit_Helper_ContextKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     elements+=InPatternElement (ambiguity) (rule end)
	 */
	protected void emit_InPattern___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('using' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     inPattern=InPattern (ambiguity) 'to' outPattern=OutPattern
	 */
	protected void emit_MatchedRule___UsingKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     varName=UnrestrictedName ':' (ambiguity) (rule end)
	 */
	protected void emit_SimpleOutPatternElement___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
