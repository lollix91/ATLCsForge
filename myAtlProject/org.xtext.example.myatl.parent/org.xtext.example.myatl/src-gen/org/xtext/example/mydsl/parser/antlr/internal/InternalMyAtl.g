/*
 * generated by Xtext 2.12.0
 */
grammar InternalMyAtl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyAtlGrammarAccess;

}

@parser::members {

 	private MyAtlGrammarAccess grammarAccess;

    public InternalMyAtlParser(TokenStream input, MyAtlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Module";
   	}

   	@Override
   	protected MyAtlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='module'
		{
			newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getModuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getNameUnrestrictedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getModuleAccess().getSemicolonKeyword_2());
		}
		otherlv_3='create'
		{
			newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getCreateKeyword_3());
		}
		otherlv_4='OUT'
		{
			newLeafNode(otherlv_4, grammarAccess.getModuleAccess().getOUTKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getModuleAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getOutModelsNameExpCSParserRuleCall_6_0());
				}
				lv_outModels_6_0=ruleNameExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"outModels",
						lv_outModels_6_0,
						"org.xtext.example.mydsl.MyAtl.NameExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getModuleAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getOutModelsNameExpCSParserRuleCall_7_1_0());
					}
					lv_outModels_8_0=ruleNameExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"outModels",
							lv_outModels_8_0,
							"org.xtext.example.mydsl.MyAtl.NameExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='from'
		{
			newLeafNode(otherlv_9, grammarAccess.getModuleAccess().getFromKeyword_8());
		}
		otherlv_10='IN'
		{
			newLeafNode(otherlv_10, grammarAccess.getModuleAccess().getINKeyword_9());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getModuleAccess().getColonKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getInModelsNameExpCSParserRuleCall_11_0());
				}
				lv_inModels_12_0=ruleNameExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"inModels",
						lv_inModels_12_0,
						"org.xtext.example.mydsl.MyAtl.NameExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getModuleAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getInModelsNameExpCSParserRuleCall_12_1_0());
					}
					lv_inModels_14_0=ruleNameExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"inModels",
							lv_inModels_14_0,
							"org.xtext.example.mydsl.MyAtl.NameExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15=';'
		{
			newLeafNode(otherlv_15, grammarAccess.getModuleAccess().getSemicolonKeyword_13());
		}
		(
			otherlv_16='uses'
			{
				newLeafNode(otherlv_16, grammarAccess.getModuleAccess().getUsesKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getVarNameNameExpCSParserRuleCall_14_1_0());
					}
					lv_varName_17_0=ruleNameExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						set(
							$current,
							"varName",
							lv_varName_17_0,
							"org.xtext.example.mydsl.MyAtl.NameExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_18=';'
			{
				newLeafNode(otherlv_18, grammarAccess.getModuleAccess().getSemicolonKeyword_14_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getElementsModuleElementParserRuleCall_15_0());
				}
				lv_elements_19_0=ruleModuleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"elements",
						lv_elements_19_0,
						"org.xtext.example.mydsl.MyAtl.ModuleElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEssentialOCLUnreservedName
entryRuleEssentialOCLUnreservedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameRule()); }
	iv_ruleEssentialOCLUnreservedName=ruleEssentialOCLUnreservedName
	{ $current=$iv_ruleEssentialOCLUnreservedName.current.getText(); }
	EOF;

// Rule EssentialOCLUnreservedName
ruleEssentialOCLUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());
		}
		this_UnrestrictedName_0=ruleUnrestrictedName
		{
			$current.merge(this_UnrestrictedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());
		}
		this_CollectionTypeIdentifier_1=ruleCollectionTypeIdentifier
		{
			$current.merge(this_CollectionTypeIdentifier_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());
		}
		this_PrimitiveTypeIdentifier_2=rulePrimitiveTypeIdentifier
		{
			$current.merge(this_PrimitiveTypeIdentifier_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw='Tuple'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_3());
		}
	)
;

// Entry rule entryRuleUnreservedName
entryRuleUnreservedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnreservedNameRule()); }
	iv_ruleUnreservedName=ruleUnreservedName
	{ $current=$iv_ruleUnreservedName.current.getText(); }
	EOF;

// Rule UnreservedName
ruleUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());
	}
	this_EssentialOCLUnreservedName_0=ruleEssentialOCLUnreservedName
	{
		$current.merge(this_EssentialOCLUnreservedName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePrimitiveTypeIdentifier
entryRulePrimitiveTypeIdentifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeIdentifierRule()); }
	iv_rulePrimitiveTypeIdentifier=rulePrimitiveTypeIdentifier
	{ $current=$iv_rulePrimitiveTypeIdentifier.current.getText(); }
	EOF;

// Rule PrimitiveTypeIdentifier
rulePrimitiveTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());
		}
		    |
		kw='Integer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());
		}
		    |
		kw='Real'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());
		}
		    |
		kw='String'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());
		}
		    |
		kw='UnlimitedNatural'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());
		}
		    |
		kw='OclAny'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());
		}
		    |
		kw='OclInvalid'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());
		}
		    |
		kw='OclVoid'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_7());
		}
	)
;

// Entry rule entryRuleCollectionTypeIdentifier
entryRuleCollectionTypeIdentifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeIdentifierRule()); }
	iv_ruleCollectionTypeIdentifier=ruleCollectionTypeIdentifier
	{ $current=$iv_ruleCollectionTypeIdentifier.current.getText(); }
	EOF;

// Rule CollectionTypeIdentifier
ruleCollectionTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Set'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());
		}
		    |
		kw='Bag'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());
		}
		    |
		kw='Sequence'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());
		}
		    |
		kw='Collection'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());
		}
		    |
		kw='OrderedSet'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());
		}
	)
;

// Entry rule entryRuleUnrestrictedName
entryRuleUnrestrictedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnrestrictedNameRule()); }
	iv_ruleUnrestrictedName=ruleUnrestrictedName
	{ $current=$iv_ruleUnrestrictedName.current.getText(); }
	EOF;

// Rule UnrestrictedName
ruleUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall());
	}
	this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName
	{
		$current.merge(this_EssentialOCLUnrestrictedName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEssentialOCLUnrestrictedName
entryRuleEssentialOCLUnrestrictedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameRule()); }
	iv_ruleEssentialOCLUnrestrictedName=ruleEssentialOCLUnrestrictedName
	{ $current=$iv_ruleEssentialOCLUnrestrictedName.current.getText(); }
	EOF;

// Rule EssentialOCLUnrestrictedName
ruleEssentialOCLUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_SIMPLE_ID_0=RULE_SIMPLE_ID
	{
		$current.merge(this_SIMPLE_ID_0);
	}
	{
		newLeafNode(this_SIMPLE_ID_0, grammarAccess.getEssentialOCLUnrestrictedNameAccess().getSIMPLE_IDTerminalRuleCall());
	}
;

// Entry rule entryRuleModuleElement
entryRuleModuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleElementRule()); }
	iv_ruleModuleElement=ruleModuleElement
	{ $current=$iv_ruleModuleElement.current; }
	EOF;

// Rule ModuleElement
ruleModuleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getModuleElementAccess().getHelperParserRuleCall_0());
		}
		this_Helper_0=ruleHelper
		{
			$current = $this_Helper_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModuleElementAccess().getMatchedRuleParserRuleCall_1());
		}
		this_MatchedRule_1=ruleMatchedRule
		{
			$current = $this_MatchedRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModuleElementAccess().getCalledRuleParserRuleCall_2());
		}
		this_CalledRule_2=ruleCalledRule
		{
			$current = $this_CalledRule_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getModuleElementAccess().getQueryRuleParserRuleCall_3());
		}
		this_QueryRule_3=ruleQueryRule
		{
			$current = $this_QueryRule_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMatchedRule
entryRuleMatchedRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMatchedRuleRule()); }
	iv_ruleMatchedRule=ruleMatchedRule
	{ $current=$iv_ruleMatchedRule.current; }
	EOF;

// Rule MatchedRule
ruleMatchedRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getMatchedRuleAccess().getRuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMatchedRuleAccess().getNameUnrestrictedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatchedRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMatchedRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='from'
		{
			newLeafNode(otherlv_3, grammarAccess.getMatchedRuleAccess().getFromKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMatchedRuleAccess().getInPatternInPatternParserRuleCall_4_0());
				}
				lv_inPattern_4_0=ruleInPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatchedRuleRule());
					}
					set(
						$current,
						"inPattern",
						lv_inPattern_4_0,
						"org.xtext.example.mydsl.MyAtl.InPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='using'
			{
				newLeafNode(otherlv_5, grammarAccess.getMatchedRuleAccess().getUsingKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getMatchedRuleAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchedRuleAccess().getVariablesRuleVariableDeclarationParserRuleCall_5_2_0());
					}
					lv_variables_7_0=ruleRuleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchedRuleRule());
						}
						add(
							$current,
							"variables",
							lv_variables_7_0,
							"org.xtext.example.mydsl.MyAtl.RuleVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getMatchedRuleAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		otherlv_9='to'
		{
			newLeafNode(otherlv_9, grammarAccess.getMatchedRuleAccess().getToKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMatchedRuleAccess().getOutPatternOutPatternParserRuleCall_7_0());
				}
				lv_outPattern_10_0=ruleOutPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatchedRuleRule());
					}
					set(
						$current,
						"outPattern",
						lv_outPattern_10_0,
						"org.xtext.example.mydsl.MyAtl.OutPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11='...'
			{
				newLeafNode(otherlv_11, grammarAccess.getMatchedRuleAccess().getFullStopFullStopFullStopKeyword_8());
			}
		)?
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getMatchedRuleAccess().getCommaKeyword_9());
			}
		)?
		(
			otherlv_13='do'
			{
				newLeafNode(otherlv_13, grammarAccess.getMatchedRuleAccess().getDoKeyword_10_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getMatchedRuleAccess().getLeftCurlyBracketKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchedRuleAccess().getActionBlockActionBlockParserRuleCall_10_2_0());
					}
					lv_actionBlock_15_0=ruleActionBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchedRuleRule());
						}
						set(
							$current,
							"actionBlock",
							lv_actionBlock_15_0,
							"org.xtext.example.mydsl.MyAtl.ActionBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getMatchedRuleAccess().getRightCurlyBracketKeyword_10_3());
			}
		)?
		(
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getMatchedRuleAccess().getCommaKeyword_11());
			}
		)?
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getMatchedRuleAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleCalledRule
entryRuleCalledRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCalledRuleRule()); }
	iv_ruleCalledRule=ruleCalledRule
	{ $current=$iv_ruleCalledRule.current; }
	EOF;

// Rule CalledRule
ruleCalledRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='entrypoint'
			{
				newLeafNode(otherlv_0, grammarAccess.getCalledRuleAccess().getEntrypointKeyword_0_0());
			}
			    |
			otherlv_1='endpoint'
			{
				newLeafNode(otherlv_1, grammarAccess.getCalledRuleAccess().getEndpointKeyword_0_1());
			}
		)?
		otherlv_2='rule'
		{
			newLeafNode(otherlv_2, grammarAccess.getCalledRuleAccess().getRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalledRuleAccess().getNameUnrestrictedNameParserRuleCall_2_0());
				}
				lv_name_3_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalledRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getCalledRuleAccess().getLeftParenthesisKeyword_3_0());
			}
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getCalledRuleAccess().getRightParenthesisKeyword_3_1());
			}
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getCalledRuleAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_7='using'
			{
				newLeafNode(otherlv_7, grammarAccess.getCalledRuleAccess().getUsingKeyword_5_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getCalledRuleAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCalledRuleAccess().getVariablesRuleVariableDeclarationParserRuleCall_5_2_0());
					}
					lv_variables_9_0=ruleRuleVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCalledRuleRule());
						}
						add(
							$current,
							"variables",
							lv_variables_9_0,
							"org.xtext.example.mydsl.MyAtl.RuleVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getCalledRuleAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		otherlv_11='to'
		{
			newLeafNode(otherlv_11, grammarAccess.getCalledRuleAccess().getToKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalledRuleAccess().getOutPatternOutPatternParserRuleCall_7_0());
				}
				lv_outPattern_12_0=ruleOutPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalledRuleRule());
					}
					set(
						$current,
						"outPattern",
						lv_outPattern_12_0,
						"org.xtext.example.mydsl.MyAtl.OutPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13='...'
			{
				newLeafNode(otherlv_13, grammarAccess.getCalledRuleAccess().getFullStopFullStopFullStopKeyword_8());
			}
		)?
		(
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getCalledRuleAccess().getCommaKeyword_9());
			}
		)?
		(
			otherlv_15='do'
			{
				newLeafNode(otherlv_15, grammarAccess.getCalledRuleAccess().getDoKeyword_10_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getCalledRuleAccess().getLeftCurlyBracketKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCalledRuleAccess().getActionBlockActionBlockParserRuleCall_10_2_0());
					}
					lv_actionBlock_17_0=ruleActionBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCalledRuleRule());
						}
						set(
							$current,
							"actionBlock",
							lv_actionBlock_17_0,
							"org.xtext.example.mydsl.MyAtl.ActionBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getCalledRuleAccess().getRightCurlyBracketKeyword_10_3());
			}
		)?
		(
			otherlv_19=','
			{
				newLeafNode(otherlv_19, grammarAccess.getCalledRuleAccess().getCommaKeyword_11());
			}
		)?
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getCalledRuleAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleQueryRule
entryRuleQueryRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRuleRule()); }
	iv_ruleQueryRule=ruleQueryRule
	{ $current=$iv_ruleQueryRule.current; }
	EOF;

// Rule QueryRule
ruleQueryRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='query'
		{
			newLeafNode(otherlv_0, grammarAccess.getQueryRuleAccess().getQueryKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryRuleAccess().getNameUnrestrictedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getQueryRuleAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getQueryRuleAccess().getParametersATLParameterCSParserRuleCall_2_1_0_0());
						}
						lv_parameters_3_0=ruleATLParameterCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQueryRuleRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_3_0,
								"org.xtext.example.mydsl.MyAtl.ATLParameterCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getQueryRuleAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getQueryRuleAccess().getParametersATLParameterCSParserRuleCall_2_1_1_1_0());
							}
							lv_parameters_5_0=ruleATLParameterCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getQueryRuleRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_5_0,
									"org.xtext.example.mydsl.MyAtl.ATLParameterCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getQueryRuleAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getQueryRuleAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryRuleAccess().getInitExpressionExpCSParserRuleCall_4_0());
				}
				lv_initExpression_8_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryRuleRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_8_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getQueryRuleAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleHelper
entryRuleHelper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHelperRule()); }
	iv_ruleHelper=ruleHelper
	{ $current=$iv_ruleHelper.current; }
	EOF;

// Rule Helper
ruleHelper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='helper'
		{
			newLeafNode(otherlv_0, grammarAccess.getHelperAccess().getHelperKeyword_0());
		}
		(
			otherlv_1='context'
			{
				newLeafNode(otherlv_1, grammarAccess.getHelperAccess().getContextKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperAccess().getNameUnrestrictedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperAccess().getDefinitionATLDefCSParserRuleCall_3_0());
				}
				lv_definition_3_0=ruleATLDefCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperRule());
					}
					set(
						$current,
						"definition",
						lv_definition_3_0,
						"org.xtext.example.mydsl.MyAtl.ATLDefCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleATLDefCS
entryRuleATLDefCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getATLDefCSRule()); }
	iv_ruleATLDefCS=ruleATLDefCS
	{ $current=$iv_ruleATLDefCS.current; }
	EOF;

// Rule ATLDefCS
ruleATLDefCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='def'
		{
			newLeafNode(otherlv_0, grammarAccess.getATLDefCSAccess().getDefKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getATLDefCSAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getATLDefCSAccess().getVarNameUnrestrictedNameParserRuleCall_2_0());
				}
				lv_varName_2_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATLDefCSRule());
					}
					set(
						$current,
						"varName",
						lv_varName_2_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getATLDefCSAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getATLDefCSAccess().getParametersATLParameterCSParserRuleCall_3_1_0_0());
						}
						lv_parameters_4_0=ruleATLParameterCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getATLDefCSRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"org.xtext.example.mydsl.MyAtl.ATLParameterCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getATLDefCSAccess().getCommaKeyword_3_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getATLDefCSAccess().getParametersATLParameterCSParserRuleCall_3_1_1_1_0());
							}
							lv_parameters_6_0=ruleATLParameterCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getATLDefCSRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_6_0,
									"org.xtext.example.mydsl.MyAtl.ATLParameterCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getATLDefCSAccess().getRightParenthesisKeyword_3_2());
			}
		)?
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getATLDefCSAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getATLDefCSAccess().getTypeATLTypeParserRuleCall_5_0());
				}
				lv_type_9_0=ruleATLType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATLDefCSRule());
					}
					set(
						$current,
						"type",
						lv_type_9_0,
						"org.xtext.example.mydsl.MyAtl.ATLType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getATLDefCSAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getATLDefCSAccess().getInitExpressionExpCSParserRuleCall_7_0());
				}
				lv_initExpression_11_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATLDefCSRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_11_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12=';'
		{
			newLeafNode(otherlv_12, grammarAccess.getATLDefCSAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleATLParameterCS
entryRuleATLParameterCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getATLParameterCSRule()); }
	iv_ruleATLParameterCS=ruleATLParameterCS
	{ $current=$iv_ruleATLParameterCS.current; }
	EOF;

// Rule ATLParameterCS
ruleATLParameterCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getATLParameterCSAccess().getVarNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_varName_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATLParameterCSRule());
					}
					set(
						$current,
						"varName",
						lv_varName_0_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getATLParameterCSAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getATLParameterCSAccess().getTypeATLTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleATLType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATLParameterCSRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyAtl.ATLType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRuleVariableDeclaration
entryRuleRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleVariableDeclarationRule()); }
	iv_ruleRuleVariableDeclaration=ruleRuleVariableDeclaration
	{ $current=$iv_ruleRuleVariableDeclaration.current; }
	EOF;

// Rule RuleVariableDeclaration
ruleRuleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleVariableDeclarationAccess().getVarNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_varName_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleVariableDeclarationRule());
					}
					set(
						$current,
						"varName",
						lv_varName_0_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRuleVariableDeclarationAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleVariableDeclarationAccess().getTypeATLTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleATLType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleVariableDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyAtl.ATLType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getRuleVariableDeclarationAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleVariableDeclarationAccess().getInitExpressionExpCSParserRuleCall_4_0());
				}
				lv_initExpression_4_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleVariableDeclarationRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_4_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getRuleVariableDeclarationAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleInPattern
entryRuleInPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInPatternRule()); }
	iv_ruleInPattern=ruleInPattern
	{ $current=$iv_ruleInPattern.current; }
	EOF;

// Rule InPattern
ruleInPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInPatternAccess().getElementsInPatternElementParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleInPatternElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInPatternRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyAtl.InPatternElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getInPatternAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInPatternAccess().getFilterExpCSParserRuleCall_1_1_0());
					}
					lv_filter_2_0=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInPatternRule());
						}
						set(
							$current,
							"filter",
							lv_filter_2_0,
							"org.xtext.example.mydsl.MyAtl.ExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getInPatternAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleInPatternElement
entryRuleInPatternElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInPatternElementRule()); }
	iv_ruleInPatternElement=ruleInPatternElement
	{ $current=$iv_ruleInPatternElement.current; }
	EOF;

// Rule InPatternElement
ruleInPatternElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInPatternElementAccess().getVarNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_varName_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInPatternElementRule());
					}
					set(
						$current,
						"varName",
						lv_varName_0_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getInPatternElementAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInPatternElementAccess().getTypeATLTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleATLType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInPatternElementRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyAtl.ATLType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOutPattern
entryRuleOutPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutPatternRule()); }
	iv_ruleOutPattern=ruleOutPattern
	{ $current=$iv_ruleOutPattern.current; }
	EOF;

// Rule OutPattern
ruleOutPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOutPatternAccess().getElementsOutPatternElementParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleOutPatternElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutPatternRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.example.mydsl.MyAtl.OutPatternElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getOutPatternAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutPatternAccess().getElementsOutPatternElementParserRuleCall_1_1_0());
					}
					lv_elements_2_0=ruleOutPatternElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutPatternRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"org.xtext.example.mydsl.MyAtl.OutPatternElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOutPatternElement
entryRuleOutPatternElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutPatternElementRule()); }
	iv_ruleOutPatternElement=ruleOutPatternElement
	{ $current=$iv_ruleOutPatternElement.current; }
	EOF;

// Rule OutPatternElement
ruleOutPatternElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOutPatternElementAccess().getSimpleOutPatternElementParserRuleCall_0());
		}
		this_SimpleOutPatternElement_0=ruleSimpleOutPatternElement
		{
			$current = $this_SimpleOutPatternElement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOutPatternElementAccess().getForEachOutPatternElementParserRuleCall_1());
		}
		this_ForEachOutPatternElement_1=ruleForEachOutPatternElement
		{
			$current = $this_ForEachOutPatternElement_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleOutPatternElement
entryRuleSimpleOutPatternElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleOutPatternElementRule()); }
	iv_ruleSimpleOutPatternElement=ruleSimpleOutPatternElement
	{ $current=$iv_ruleSimpleOutPatternElement.current; }
	EOF;

// Rule SimpleOutPatternElement
ruleSimpleOutPatternElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleOutPatternElementAccess().getVarNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_varName_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleOutPatternElementRule());
					}
					set(
						$current,
						"varName",
						lv_varName_0_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleOutPatternElementAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleOutPatternElementAccess().getTypeATLTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleATLType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleOutPatternElementRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyAtl.ATLType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getSimpleOutPatternElementAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleOutPatternElementAccess().getBindingsBindingParserRuleCall_3_1_0_0());
						}
						lv_bindings_4_0=ruleBinding
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleOutPatternElementRule());
							}
							add(
								$current,
								"bindings",
								lv_bindings_4_0,
								"org.xtext.example.mydsl.MyAtl.Binding");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getSimpleOutPatternElementAccess().getCommaKeyword_3_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSimpleOutPatternElementAccess().getBindingsBindingParserRuleCall_3_1_1_1_0());
							}
							lv_bindings_6_0=ruleBinding
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimpleOutPatternElementRule());
								}
								add(
									$current,
									"bindings",
									lv_bindings_6_0,
									"org.xtext.example.mydsl.MyAtl.Binding");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getSimpleOutPatternElementAccess().getRightParenthesisKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleForEachOutPatternElement
entryRuleForEachOutPatternElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForEachOutPatternElementRule()); }
	iv_ruleForEachOutPatternElement=ruleForEachOutPatternElement
	{ $current=$iv_ruleForEachOutPatternElement.current; }
	EOF;

// Rule ForEachOutPatternElement
ruleForEachOutPatternElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='xxx'
		{
			newLeafNode(otherlv_0, grammarAccess.getForEachOutPatternElementAccess().getXxxKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachOutPatternElementAccess().getCollectionExpCSParserRuleCall_1_0());
				}
				lv_collection_1_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachOutPatternElementRule());
					}
					set(
						$current,
						"collection",
						lv_collection_1_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='yyy'
		{
			newLeafNode(otherlv_2, grammarAccess.getForEachOutPatternElementAccess().getYyyKeyword_2());
		}
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingAccess().getPropertyNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_propertyName_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingRule());
					}
					set(
						$current,
						"propertyName",
						lv_propertyName_0_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='<-'
		{
			newLeafNode(otherlv_1, grammarAccess.getBindingAccess().getLessThanSignHyphenMinusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingAccess().getValueExpCSParserRuleCall_2_0());
				}
				lv_value_2_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleActionBlock
entryRuleActionBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionBlockRule()); }
	iv_ruleActionBlock=ruleActionBlock
	{ $current=$iv_ruleActionBlock.current; }
	EOF;

// Rule ActionBlock
ruleActionBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getActionBlockAccess().getStatementsStatementParserRuleCall_0());
			}
			lv_statements_0_0=ruleStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getActionBlockRule());
				}
				add(
					$current,
					"statements",
					lv_statements_0_0,
					"org.xtext.example.mydsl.MyAtl.Statement");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getStatementAccess().getBindingStatParserRuleCall());
	}
	this_BindingStat_0=ruleBindingStat
	{
		$current = $this_BindingStat_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBindingStat
entryRuleBindingStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingStatRule()); }
	iv_ruleBindingStat=ruleBindingStat
	{ $current=$iv_ruleBindingStat.current; }
	EOF;

// Rule BindingStat
ruleBindingStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingStatAccess().getSourceExpCSParserRuleCall_0_0());
				}
				lv_source_0_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingStatRule());
					}
					set(
						$current,
						"source",
						lv_source_0_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getBindingStatAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingStatAccess().getPropertyNameUnrestrictedNameParserRuleCall_2_0());
				}
				lv_propertyName_2_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingStatRule());
					}
					set(
						$current,
						"propertyName",
						lv_propertyName_2_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='<-'
		{
			newLeafNode(otherlv_3, grammarAccess.getBindingStatAccess().getLessThanSignHyphenMinusKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingStatAccess().getValueExpCSParserRuleCall_4_0());
				}
				lv_value_4_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingStatRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getBindingStatAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleATLType
entryRuleATLType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getATLTypeRule()); }
	iv_ruleATLType=ruleATLType
	{ $current=$iv_ruleATLType.current; }
	EOF;

// Rule ATLType
ruleATLType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getATLTypeAccess().getModelNameATLModelNameParserRuleCall_0_0_0());
					}
					lv_modelName_0_0=ruleATLModelName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getATLTypeRule());
						}
						set(
							$current,
							"modelName",
							lv_modelName_0_0,
							"org.xtext.example.mydsl.MyAtl.ATLModelName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='!'
			{
				newLeafNode(otherlv_1, grammarAccess.getATLTypeAccess().getExclamationMarkKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getATLTypeAccess().getTypeTypeExpCSParserRuleCall_1_0());
				}
				lv_type_2_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATLTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyAtl.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleATLModelName
entryRuleATLModelName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getATLModelNameRule()); }
	iv_ruleATLModelName=ruleATLModelName
	{ $current=$iv_ruleATLModelName.current.getText(); }
	EOF;

// Rule ATLModelName
ruleATLModelName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getATLModelNameAccess().getUnrestrictedNameParserRuleCall());
	}
	this_UnrestrictedName_0=ruleUnrestrictedName
	{
		$current.merge(this_UnrestrictedName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEssentialOCLPrefixOperator
entryRuleEssentialOCLPrefixOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLPrefixOperatorRule()); }
	iv_ruleEssentialOCLPrefixOperator=ruleEssentialOCLPrefixOperator
	{ $current=$iv_ruleEssentialOCLPrefixOperator.current.getText(); }
	EOF;

// Rule EssentialOCLPrefixOperator
ruleEssentialOCLPrefixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLPrefixOperatorAccess().getHyphenMinusKeyword_0());
		}
		    |
		kw='not'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLPrefixOperatorAccess().getNotKeyword_1());
		}
	)
;

// Entry rule entryRuleEssentialOCLInfixOperator
entryRuleEssentialOCLInfixOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLInfixOperatorRule()); }
	iv_ruleEssentialOCLInfixOperator=ruleEssentialOCLInfixOperator
	{ $current=$iv_ruleEssentialOCLInfixOperator.current.getText(); }
	EOF;

// Rule EssentialOCLInfixOperator
ruleEssentialOCLInfixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getSolidusKeyword_1());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getPlusSignKeyword_2());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getHyphenMinusKeyword_3());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getGreaterThanSignKeyword_4());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getLessThanSignKeyword_5());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getGreaterThanSignEqualsSignKeyword_6());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getLessThanSignEqualsSignKeyword_7());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getEqualsSignKeyword_8());
		}
		    |
		kw='<>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getLessThanSignGreaterThanSignKeyword_9());
		}
		    |
		kw='and'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getAndKeyword_10());
		}
		    |
		kw='or'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getOrKeyword_11());
		}
		    |
		kw='xor'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getXorKeyword_12());
		}
		    |
		kw='implies'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorAccess().getImpliesKeyword_13());
		}
	)
;

// Entry rule entryRuleEssentialOCLNavigationOperator
entryRuleEssentialOCLNavigationOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEssentialOCLNavigationOperatorRule()); }
	iv_ruleEssentialOCLNavigationOperator=ruleEssentialOCLNavigationOperator
	{ $current=$iv_ruleEssentialOCLNavigationOperator.current.getText(); }
	EOF;

// Rule EssentialOCLNavigationOperator
ruleEssentialOCLNavigationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorAccess().getFullStopKeyword_0());
		}
		    |
		kw='->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current.getText(); }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_SINGLE_QUOTED_STRING_0=RULE_SINGLE_QUOTED_STRING
	{
		$current.merge(this_SINGLE_QUOTED_STRING_0);
	}
	{
		newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());
	}
;

// Entry rule entryRulePrefixOperator
entryRulePrefixOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrefixOperatorRule()); }
	iv_rulePrefixOperator=rulePrefixOperator
	{ $current=$iv_rulePrefixOperator.current.getText(); }
	EOF;

// Rule PrefixOperator
rulePrefixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getPrefixOperatorAccess().getEssentialOCLPrefixOperatorParserRuleCall());
	}
	this_EssentialOCLPrefixOperator_0=ruleEssentialOCLPrefixOperator
	{
		$current.merge(this_EssentialOCLPrefixOperator_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleInfixOperator
entryRuleInfixOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInfixOperatorRule()); }
	iv_ruleInfixOperator=ruleInfixOperator
	{ $current=$iv_ruleInfixOperator.current.getText(); }
	EOF;

// Rule InfixOperator
ruleInfixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getInfixOperatorAccess().getEssentialOCLInfixOperatorParserRuleCall());
	}
	this_EssentialOCLInfixOperator_0=ruleEssentialOCLInfixOperator
	{
		$current.merge(this_EssentialOCLInfixOperator_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleNavigationOperator
entryRuleNavigationOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNavigationOperatorRule()); }
	iv_ruleNavigationOperator=ruleNavigationOperator
	{ $current=$iv_ruleNavigationOperator.current.getText(); }
	EOF;

// Rule NavigationOperator
ruleNavigationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getNavigationOperatorAccess().getEssentialOCLNavigationOperatorParserRuleCall());
	}
	this_EssentialOCLNavigationOperator_0=ruleEssentialOCLNavigationOperator
	{
		$current.merge(this_EssentialOCLNavigationOperator_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleCollectionTypeCS
entryRuleCollectionTypeCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTypeCSRule()); }
	iv_ruleCollectionTypeCS=ruleCollectionTypeCS
	{ $current=$iv_ruleCollectionTypeCS.current; }
	EOF;

// Rule CollectionTypeCS
ruleCollectionTypeCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());
				}
				lv_name_0_0=ruleCollectionTypeIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl.MyAtl.CollectionTypeIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					otherlv_1='('
					{
						newLeafNode(otherlv_1, grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0_0_0());
					}
					    |
					otherlv_2='{'
					{
						newLeafNode(otherlv_2, grammarAccess.getCollectionTypeCSAccess().getLeftCurlyBracketKeyword_1_0_0_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_0_1_0());
						}
						lv_ownedType_3_0=ruleTypeExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
							}
							set(
								$current,
								"ownedType",
								lv_ownedType_3_0,
								"org.xtext.example.mydsl.MyAtl.TypeExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					otherlv_4=')'
					{
						newLeafNode(otherlv_4, grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_0_2_0());
					}
					    |
					otherlv_5='}'
					{
						newLeafNode(otherlv_5, grammarAccess.getCollectionTypeCSAccess().getRightCurlyBracketKeyword_1_0_2_1());
					}
				)
			)
			    |
			(
				otherlv_6='<'
				{
					newLeafNode(otherlv_6, grammarAccess.getCollectionTypeCSAccess().getLessThanSignKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_1_0());
						}
						lv_ownedType_7_0=ruleTypeExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
							}
							set(
								$current,
								"ownedType",
								lv_ownedType_7_0,
								"org.xtext.example.mydsl.MyAtl.TypeExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8='>'
				{
					newLeafNode(otherlv_8, grammarAccess.getCollectionTypeCSAccess().getGreaterThanSignKeyword_1_1_2());
				}
			)
		)?
	)
;

// Entry rule entryRuleTupleTypeCS
entryRuleTupleTypeCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleTypeCSRule()); }
	iv_ruleTupleTypeCS=ruleTupleTypeCS
	{ $current=$iv_ruleTupleTypeCS.current; }
	EOF;

// Rule TupleTypeCS
ruleTupleTypeCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Tuple'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTupleTypeCSRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Tuple");
				}
			)
		)
		(
			(
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_0_1_0_0());
							}
							lv_ownedParts_2_0=ruletuplePartCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
								}
								add(
									$current,
									"ownedParts",
									lv_ownedParts_2_0,
									"org.xtext.example.mydsl.MyAtl.tuplePartCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3=','
						{
							newLeafNode(otherlv_3, grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_0_1_1_1_0());
								}
								lv_ownedParts_4_0=ruletuplePartCS
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
									}
									add(
										$current,
										"ownedParts",
										lv_ownedParts_4_0,
										"org.xtext.example.mydsl.MyAtl.tuplePartCS");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_0_2());
				}
			)
			    |
			(
				otherlv_6='<'
				{
					newLeafNode(otherlv_6, grammarAccess.getTupleTypeCSAccess().getLessThanSignKeyword_1_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_0_0());
							}
							lv_ownedParts_7_0=ruletuplePartCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
								}
								add(
									$current,
									"ownedParts",
									lv_ownedParts_7_0,
									"org.xtext.example.mydsl.MyAtl.tuplePartCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_8=','
						{
							newLeafNode(otherlv_8, grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_1_0());
								}
								lv_ownedParts_9_0=ruletuplePartCS
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
									}
									add(
										$current,
										"ownedParts",
										lv_ownedParts_9_0,
										"org.xtext.example.mydsl.MyAtl.tuplePartCS");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_10='>'
				{
					newLeafNode(otherlv_10, grammarAccess.getTupleTypeCSAccess().getGreaterThanSignKeyword_1_1_2());
				}
			)
		)?
		(
			(
				lv_backtrack_11_0='true'
				{
					newLeafNode(lv_backtrack_11_0, grammarAccess.getTupleTypeCSAccess().getBacktrackTrueKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTupleTypeCSRule());
					}
					setWithLastConsumed($current, "backtrack", lv_backtrack_11_0, "true");
				}
			)
		)
	)
;

// Entry rule entryRuletuplePartCS
entryRuletuplePartCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTuplePartCSRule()); }
	iv_ruletuplePartCS=ruletuplePartCS
	{ $current=$iv_ruletuplePartCS.current; }
	EOF;

// Rule tuplePartCS
ruletuplePartCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTuplePartCSAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());
				}
				lv_ownedType_2_0=ruleTypeExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
					}
					set(
						$current,
						"ownedType",
						lv_ownedType_2_0,
						"org.xtext.example.mydsl.MyAtl.TypeExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimitiveLiteralExpCS
entryRulePrimitiveLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSRule()); }
	iv_rulePrimitiveLiteralExpCS=rulePrimitiveLiteralExpCS
	{ $current=$iv_rulePrimitiveLiteralExpCS.current; }
	EOF;

// Rule PrimitiveLiteralExpCS
rulePrimitiveLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());
		}
		this_NumberLiteralExpCS_0=ruleNumberLiteralExpCS
		{
			$current = $this_NumberLiteralExpCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());
		}
		this_StringLiteralExpCS_1=ruleStringLiteralExpCS
		{
			$current = $this_StringLiteralExpCS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());
		}
		this_BooleanLiteralExpCS_2=ruleBooleanLiteralExpCS
		{
			$current = $this_BooleanLiteralExpCS_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());
		}
		this_UnlimitedNaturalLiteralExpCS_3=ruleUnlimitedNaturalLiteralExpCS
		{
			$current = $this_UnlimitedNaturalLiteralExpCS_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());
		}
		this_InvalidLiteralExpCS_4=ruleInvalidLiteralExpCS
		{
			$current = $this_InvalidLiteralExpCS_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());
		}
		this_NullLiteralExpCS_5=ruleNullLiteralExpCS
		{
			$current = $this_NullLiteralExpCS_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTupleLiteralExpCS
entryRuleTupleLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleLiteralExpCSRule()); }
	iv_ruleTupleLiteralExpCS=ruleTupleLiteralExpCS
	{ $current=$iv_ruleTupleLiteralExpCS.current; }
	EOF;

// Rule TupleLiteralExpCS
ruleTupleLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Tuple'
		{
			newLeafNode(otherlv_0, grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());
				}
				lv_ownedParts_2_0=ruleTupleLiteralPartCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
					}
					add(
						$current,
						"ownedParts",
						lv_ownedParts_2_0,
						"org.xtext.example.mydsl.MyAtl.TupleLiteralPartCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());
					}
					lv_ownedParts_4_0=ruleTupleLiteralPartCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
						}
						add(
							$current,
							"ownedParts",
							lv_ownedParts_4_0,
							"org.xtext.example.mydsl.MyAtl.TupleLiteralPartCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTupleLiteralPartCS
entryRuleTupleLiteralPartCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleLiteralPartCSRule()); }
	iv_ruleTupleLiteralPartCS=ruleTupleLiteralPartCS
	{ $current=$iv_ruleTupleLiteralPartCS.current; }
	EOF;

// Rule TupleLiteralPartCS
ruleTupleLiteralPartCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
					}
					lv_ownedType_2_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_2_0,
							"org.xtext.example.mydsl.MyAtl.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionExpCSParserRuleCall_3_0());
				}
				lv_initExpression_4_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_4_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumberLiteralExpCS
entryRuleNumberLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralExpCSRule()); }
	iv_ruleNumberLiteralExpCS=ruleNumberLiteralExpCS
	{ $current=$iv_ruleNumberLiteralExpCS.current; }
	EOF;

// Rule NumberLiteralExpCS
ruleNumberLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_BIG_INT
			{
				newLeafNode(lv_name_0_0, grammarAccess.getNumberLiteralExpCSAccess().getNameBIG_INTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumberLiteralExpCSRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.mydsl.MyAtl.BIG_INT");
			}
		)
	)
;

// Entry rule entryRuleStringLiteralExpCS
entryRuleStringLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralExpCSRule()); }
	iv_ruleStringLiteralExpCS=ruleStringLiteralExpCS
	{ $current=$iv_ruleStringLiteralExpCS.current; }
	EOF;

// Rule StringLiteralExpCS
ruleStringLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStringLiteralExpCSAccess().getNameStringLiteralParserRuleCall_0());
			}
			lv_name_0_0=ruleStringLiteral
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getStringLiteralExpCSRule());
				}
				add(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.mydsl.MyAtl.StringLiteral");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBooleanLiteralExpCS
entryRuleBooleanLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralExpCSRule()); }
	iv_ruleBooleanLiteralExpCS=ruleBooleanLiteralExpCS
	{ $current=$iv_ruleBooleanLiteralExpCS.current; }
	EOF;

// Rule BooleanLiteralExpCS
ruleBooleanLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='true'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBooleanLiteralExpCSAccess().getNameTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "true");
				}
			)
		)
		    |
		(
			(
				lv_name_1_0='false'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBooleanLiteralExpCSAccess().getNameFalseKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "false");
				}
			)
		)
	)
;

// Entry rule entryRuleUnlimitedNaturalLiteralExpCS
entryRuleUnlimitedNaturalLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpCSRule()); }
	iv_ruleUnlimitedNaturalLiteralExpCS=ruleUnlimitedNaturalLiteralExpCS
	{ $current=$iv_ruleUnlimitedNaturalLiteralExpCS.current; }
	EOF;

// Rule UnlimitedNaturalLiteralExpCS
ruleUnlimitedNaturalLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0(),
					$current);
			}
		)
		otherlv_1='*'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());
		}
	)
;

// Entry rule entryRuleInvalidLiteralExpCS
entryRuleInvalidLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvalidLiteralExpCSRule()); }
	iv_ruleInvalidLiteralExpCS=ruleInvalidLiteralExpCS
	{ $current=$iv_ruleInvalidLiteralExpCS.current; }
	EOF;

// Rule InvalidLiteralExpCS
ruleInvalidLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0(),
					$current);
			}
		)
		otherlv_1='invalid'
		{
			newLeafNode(otherlv_1, grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());
		}
	)
;

// Entry rule entryRuleNullLiteralExpCS
entryRuleNullLiteralExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullLiteralExpCSRule()); }
	iv_ruleNullLiteralExpCS=ruleNullLiteralExpCS
	{ $current=$iv_ruleNullLiteralExpCS.current; }
	EOF;

// Rule NullLiteralExpCS
ruleNullLiteralExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRulePrimitiveTypeCS
entryRulePrimitiveTypeCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeCSRule()); }
	iv_rulePrimitiveTypeCS=rulePrimitiveTypeCS
	{ $current=$iv_rulePrimitiveTypeCS.current; }
	EOF;

// Rule PrimitiveTypeCS
rulePrimitiveTypeCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());
			}
			lv_name_0_0=rulePrimitiveTypeIdentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPrimitiveTypeCSRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.mydsl.MyAtl.PrimitiveTypeIdentifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTypeLiteralCS
entryRuleTypeLiteralCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLiteralCSRule()); }
	iv_ruleTypeLiteralCS=ruleTypeLiteralCS
	{ $current=$iv_ruleTypeLiteralCS.current; }
	EOF;

// Rule TypeLiteralCS
ruleTypeLiteralCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());
		}
		this_PrimitiveTypeCS_0=rulePrimitiveTypeCS
		{
			$current = $this_PrimitiveTypeCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_1());
		}
		this_TupleTypeCS_1=ruleTupleTypeCS
		{
			$current = $this_TupleTypeCS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_2());
		}
		this_CollectionTypeCS_2=ruleCollectionTypeCS
		{
			$current = $this_CollectionTypeCS_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeNameExpCS
entryRuleTypeNameExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameExpCSRule()); }
	iv_ruleTypeNameExpCS=ruleTypeNameExpCS
	{ $current=$iv_ruleTypeNameExpCS.current; }
	EOF;

// Rule TypeNameExpCS
ruleTypeNameExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getNamespaceUnrestrictedNameParserRuleCall_0_0_0_0());
						}
						lv_namespace_0_0=ruleUnrestrictedName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
							}
							add(
								$current,
								"namespace",
								lv_namespace_0_0,
								"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='::'
				{
					newLeafNode(otherlv_1, grammarAccess.getTypeNameExpCSAccess().getColonColonKeyword_0_0_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getNamespaceUnreservedNameParserRuleCall_0_0_2_0_0());
							}
							lv_namespace_2_0=ruleUnreservedName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
								}
								add(
									$current,
									"namespace",
									lv_namespace_2_0,
									"org.xtext.example.mydsl.MyAtl.UnreservedName");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_3='::'
					{
						newLeafNode(otherlv_3, grammarAccess.getTypeNameExpCSAccess().getColonColonKeyword_0_0_2_1());
					}
				)*
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getElementUnreservedNameParserRuleCall_0_1_0());
					}
					lv_element_4_0=ruleUnreservedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
						}
						set(
							$current,
							"element",
							lv_element_4_0,
							"org.xtext.example.mydsl.MyAtl.UnreservedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getElementUnrestrictedNameParserRuleCall_1_0());
				}
				lv_element_5_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
					}
					set(
						$current,
						"element",
						lv_element_5_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeExpCS
entryRuleTypeExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeExpCSRule()); }
	iv_ruleTypeExpCS=ruleTypeExpCS
	{ $current=$iv_ruleTypeExpCS.current; }
	EOF;

// Rule TypeExpCS
ruleTypeExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeNameExpCSParserRuleCall_0());
		}
		this_TypeNameExpCS_0=ruleTypeNameExpCS
		{
			$current = $this_TypeNameExpCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeLiteralCSParserRuleCall_1());
		}
		this_TypeLiteralCS_1=ruleTypeLiteralCS
		{
			$current = $this_TypeLiteralCS_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNavigatingArgCS
entryRuleNavigatingArgCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingArgCSRule()); }
	iv_ruleNavigatingArgCS=ruleNavigatingArgCS
	{ $current=$iv_ruleNavigatingArgCS.current; }
	EOF;

// Rule NavigatingArgCS
ruleNavigatingArgCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getNameNavigatingArgExpCSParserRuleCall_0_0());
				}
				lv_name_0_0=ruleNavigatingArgExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl.MyAtl.NavigatingArgExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
					}
					lv_ownedType_2_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_2_0,
							"org.xtext.example.mydsl.MyAtl.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getInitExpCSParserRuleCall_2_1_0());
					}
					lv_init_4_0=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
						}
						set(
							$current,
							"init",
							lv_init_4_0,
							"org.xtext.example.mydsl.MyAtl.ExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNavigatingBarArgCS
entryRuleNavigatingBarArgCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingBarArgCSRule()); }
	iv_ruleNavigatingBarArgCS=ruleNavigatingBarArgCS
	{ $current=$iv_ruleNavigatingBarArgCS.current; }
	EOF;

// Rule NavigatingBarArgCS
ruleNavigatingBarArgCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_prefix_0_0='|'
				{
					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavigatingBarArgCSRule());
					}
					setWithLastConsumed($current, "prefix", lv_prefix_0_0, "|");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getNameNavigatingArgExpCSParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNavigatingArgExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyAtl.NavigatingArgExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
					}
					lv_ownedType_3_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_3_0,
							"org.xtext.example.mydsl.MyAtl.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getInitExpCSParserRuleCall_3_1_0());
					}
					lv_init_5_0=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
						}
						set(
							$current,
							"init",
							lv_init_5_0,
							"org.xtext.example.mydsl.MyAtl.ExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNavigatingCommaArgCS
entryRuleNavigatingCommaArgCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingCommaArgCSRule()); }
	iv_ruleNavigatingCommaArgCS=ruleNavigatingCommaArgCS
	{ $current=$iv_ruleNavigatingCommaArgCS.current; }
	EOF;

// Rule NavigatingCommaArgCS
ruleNavigatingCommaArgCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_prefix_0_0=','
				{
					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavigatingCommaArgCSRule());
					}
					setWithLastConsumed($current, "prefix", lv_prefix_0_0, ",");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getNameNavigatingArgExpCSParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNavigatingArgExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyAtl.NavigatingArgExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
					}
					lv_ownedType_3_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_3_0,
							"org.xtext.example.mydsl.MyAtl.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getInitExpCSParserRuleCall_3_1_0());
					}
					lv_init_5_0=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
						}
						set(
							$current,
							"init",
							lv_init_5_0,
							"org.xtext.example.mydsl.MyAtl.ExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNavigatingSemiArgCS
entryRuleNavigatingSemiArgCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingSemiArgCSRule()); }
	iv_ruleNavigatingSemiArgCS=ruleNavigatingSemiArgCS
	{ $current=$iv_ruleNavigatingSemiArgCS.current; }
	EOF;

// Rule NavigatingSemiArgCS
ruleNavigatingSemiArgCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_prefix_0_0=';'
				{
					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavigatingSemiArgCSRule());
					}
					setWithLastConsumed($current, "prefix", lv_prefix_0_0, ";");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getNameNavigatingArgExpCSParserRuleCall_1_0());
				}
				lv_name_1_0=ruleNavigatingArgExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl.MyAtl.NavigatingArgExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());
					}
					lv_ownedType_3_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_3_0,
							"org.xtext.example.mydsl.MyAtl.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getInitExpCSParserRuleCall_3_1_0());
					}
					lv_init_5_0=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
						}
						set(
							$current,
							"init",
							lv_init_5_0,
							"org.xtext.example.mydsl.MyAtl.ExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNavigatingArgExpCS
entryRuleNavigatingArgExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingArgExpCSRule()); }
	iv_ruleNavigatingArgExpCS=ruleNavigatingArgExpCS
	{ $current=$iv_ruleNavigatingArgExpCS.current; }
	EOF;

// Rule NavigatingArgExpCS
ruleNavigatingArgExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall());
	}
	this_ExpCS_0=ruleExpCS
	{
		$current = $this_ExpCS_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleIfExpCS
entryRuleIfExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfExpCSRule()); }
	iv_ruleIfExpCS=ruleIfExpCS
	{ $current=$iv_ruleIfExpCS.current; }
	EOF;

// Rule IfExpCS
ruleIfExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfExpCSAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpCSAccess().getConditionExpCSParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpCSRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfExpCSAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpCSAccess().getThenExpressionExpCSParserRuleCall_3_0());
				}
				lv_thenExpression_3_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpCSRule());
					}
					set(
						$current,
						"thenExpression",
						lv_thenExpression_3_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='else'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfExpCSAccess().getElseKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpCSAccess().getElseExpressionExpCSParserRuleCall_5_0());
				}
				lv_elseExpression_5_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpCSRule());
					}
					set(
						$current,
						"elseExpression",
						lv_elseExpression_5_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='endif'
		{
			newLeafNode(otherlv_6, grammarAccess.getIfExpCSAccess().getEndifKeyword_6());
		}
	)
;

// Entry rule entryRuleLetExpCS
entryRuleLetExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetExpCSRule()); }
	iv_ruleLetExpCS=ruleLetExpCS
	{ $current=$iv_ruleLetExpCS.current; }
	EOF;

// Rule LetExpCS
ruleLetExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getLetExpCSAccess().getLetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetExpCSAccess().getVariableLetVariableCSParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleLetVariableCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetExpCSRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"org.xtext.example.mydsl.MyAtl.LetVariableCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetExpCSAccess().getVariableLetVariableCSParserRuleCall_2_1_0());
					}
					lv_variable_3_0=ruleLetVariableCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetExpCSRule());
						}
						add(
							$current,
							"variable",
							lv_variable_3_0,
							"org.xtext.example.mydsl.MyAtl.LetVariableCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getLetExpCSAccess().getInKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetExpCSAccess().getInExpCSParserRuleCall_4_0());
				}
				lv_in_5_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetExpCSRule());
					}
					set(
						$current,
						"in",
						lv_in_5_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLetVariableCS
entryRuleLetVariableCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetVariableCSRule()); }
	iv_ruleLetVariableCS=ruleLetVariableCS
	{ $current=$iv_ruleLetVariableCS.current; }
	EOF;

// Rule LetVariableCS
ruleLetVariableCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getLetVariableCSAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());
					}
					lv_ownedType_2_0=ruleTypeExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
						}
						set(
							$current,
							"ownedType",
							lv_ownedType_2_0,
							"org.xtext.example.mydsl.MyAtl.TypeExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetVariableCSAccess().getInitExpressionExpCSParserRuleCall_3_0());
				}
				lv_initExpression_4_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
					}
					set(
						$current,
						"initExpression",
						lv_initExpression_4_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNestedExpCS
entryRuleNestedExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNestedExpCSRule()); }
	iv_ruleNestedExpCS=ruleNestedExpCS
	{ $current=$iv_ruleNestedExpCS.current; }
	EOF;

// Rule NestedExpCS
ruleNestedExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNestedExpCSAccess().getSourceExpCSParserRuleCall_1_0());
				}
				lv_source_1_0=ruleExpCS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNestedExpCSRule());
					}
					set(
						$current,
						"source",
						lv_source_1_0,
						"org.xtext.example.mydsl.MyAtl.ExpCS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleSelfExpCS
entryRuleSelfExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelfExpCSRule()); }
	iv_ruleSelfExpCS=ruleSelfExpCS
	{ $current=$iv_ruleSelfExpCS.current; }
	EOF;

// Rule SelfExpCS
ruleSelfExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0(),
					$current);
			}
		)
		otherlv_1='self'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());
		}
	)
;

// Entry rule entryRulePrimaryExpCS
entryRulePrimaryExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpCSRule()); }
	iv_rulePrimaryExpCS=rulePrimaryExpCS
	{ $current=$iv_rulePrimaryExpCS.current; }
	EOF;

// Rule PrimaryExpCS
rulePrimaryExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNavigatingExpCSParserRuleCall_0());
		}
		this_NavigatingExpCS_0=ruleNavigatingExpCS
		{
			$current = $this_NavigatingExpCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_1());
		}
		this_SelfExpCS_1=ruleSelfExpCS
		{
			$current = $this_SelfExpCS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_2());
		}
		this_PrimitiveLiteralExpCS_2=rulePrimitiveLiteralExpCS
		{
			$current = $this_PrimitiveLiteralExpCS_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_3());
		}
		this_TupleLiteralExpCS_3=ruleTupleLiteralExpCS
		{
			$current = $this_TupleLiteralExpCS_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getLetExpCSParserRuleCall_4());
		}
		this_LetExpCS_4=ruleLetExpCS
		{
			$current = $this_LetExpCS_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_5());
		}
		this_IfExpCS_5=ruleIfExpCS
		{
			$current = $this_IfExpCS_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_6());
		}
		this_NestedExpCS_6=ruleNestedExpCS
		{
			$current = $this_NestedExpCS_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getStringExpCsParserRuleCall_7());
		}
		this_StringExpCs_7=ruleStringExpCs
		{
			$current = $this_StringExpCs_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringExpCs
entryRuleStringExpCs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringExpCsRule()); }
	iv_ruleStringExpCs=ruleStringExpCs
	{ $current=$iv_ruleStringExpCs.current; }
	EOF;

// Rule StringExpCs
ruleStringExpCs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='...'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getStringExpCsAccess().getNameFullStopFullStopFullStopKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringExpCsRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "...");
			}
		)
	)
;

// Entry rule entryRuleNameExpCS
entryRuleNameExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameExpCSRule()); }
	iv_ruleNameExpCS=ruleNameExpCS
	{ $current=$iv_ruleNameExpCS.current; }
	EOF;

// Rule NameExpCS
ruleNameExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getNameExpCSAccess().getNamespaceUnrestrictedNameParserRuleCall_0_0_0_0());
						}
						lv_namespace_0_0=ruleUnrestrictedName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNameExpCSRule());
							}
							add(
								$current,
								"namespace",
								lv_namespace_0_0,
								"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='::'
				{
					newLeafNode(otherlv_1, grammarAccess.getNameExpCSAccess().getColonColonKeyword_0_0_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getNameExpCSAccess().getNamespaceUnreservedNameParserRuleCall_0_0_2_0_0());
							}
							lv_namespace_2_0=ruleUnreservedName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNameExpCSRule());
								}
								add(
									$current,
									"namespace",
									lv_namespace_2_0,
									"org.xtext.example.mydsl.MyAtl.UnreservedName");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_3='::'
					{
						newLeafNode(otherlv_3, grammarAccess.getNameExpCSAccess().getColonColonKeyword_0_0_2_1());
					}
				)*
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNameExpCSAccess().getElementUnreservedNameParserRuleCall_0_1_0());
					}
					lv_element_4_0=ruleUnreservedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNameExpCSRule());
						}
						set(
							$current,
							"element",
							lv_element_4_0,
							"org.xtext.example.mydsl.MyAtl.UnreservedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getNameExpCSAccess().getElementUnrestrictedNameParserRuleCall_1_0());
				}
				lv_element_5_0=ruleUnrestrictedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameExpCSRule());
					}
					set(
						$current,
						"element",
						lv_element_5_0,
						"org.xtext.example.mydsl.MyAtl.UnrestrictedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpCS
entryRuleExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpCSRule()); }
	iv_ruleExpCS=ruleExpCS
	{ $current=$iv_ruleExpCS.current; }
	EOF;

// Rule ExpCS
ruleExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpCSAccess().getInfixedExpCSParserRuleCall());
	}
	this_InfixedExpCS_0=ruleInfixedExpCS
	{
		$current = $this_InfixedExpCS_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleInfixedExpCS
entryRuleInfixedExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfixedExpCSRule()); }
	iv_ruleInfixedExpCS=ruleInfixedExpCS
	{ $current=$iv_ruleInfixedExpCS.current; }
	EOF;

// Rule InfixedExpCS
ruleInfixedExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInfixedExpCSAccess().getPrefixedExpCSParserRuleCall_0());
		}
		this_PrefixedExpCS_0=rulePrefixedExpCS
		{
			$current = $this_PrefixedExpCS_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getInfixedExpCSAccess().getInfixExpCSOwnedExpressionAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getInfixedExpCSAccess().getOwnedOperatorBinaryOperatorCSParserRuleCall_1_1_0_0());
						}
						lv_ownedOperator_2_0=ruleBinaryOperatorCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInfixedExpCSRule());
							}
							add(
								$current,
								"ownedOperator",
								lv_ownedOperator_2_0,
								"org.xtext.example.mydsl.MyAtl.BinaryOperatorCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getInfixedExpCSAccess().getOwnedExpressionPrefixedExpCSParserRuleCall_1_1_1_0());
						}
						lv_ownedExpression_3_0=rulePrefixedExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInfixedExpCSRule());
							}
							add(
								$current,
								"ownedExpression",
								lv_ownedExpression_3_0,
								"org.xtext.example.mydsl.MyAtl.PrefixedExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)+
		)?
	)
;

// Entry rule entryRuleBinaryOperatorCS
entryRuleBinaryOperatorCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryOperatorCSRule()); }
	iv_ruleBinaryOperatorCS=ruleBinaryOperatorCS
	{ $current=$iv_ruleBinaryOperatorCS.current; }
	EOF;

// Rule BinaryOperatorCS
ruleBinaryOperatorCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBinaryOperatorCSAccess().getInfixOperatorCSParserRuleCall_0());
		}
		this_InfixOperatorCS_0=ruleInfixOperatorCS
		{
			$current = $this_InfixOperatorCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBinaryOperatorCSAccess().getNavigationOperatorCSParserRuleCall_1());
		}
		this_NavigationOperatorCS_1=ruleNavigationOperatorCS
		{
			$current = $this_NavigationOperatorCS_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInfixOperatorCS
entryRuleInfixOperatorCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInfixOperatorCSRule()); }
	iv_ruleInfixOperatorCS=ruleInfixOperatorCS
	{ $current=$iv_ruleInfixOperatorCS.current; }
	EOF;

// Rule InfixOperatorCS
ruleInfixOperatorCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInfixOperatorCSAccess().getNameInfixOperatorParserRuleCall_0());
			}
			lv_name_0_0=ruleInfixOperator
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getInfixOperatorCSRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.mydsl.MyAtl.InfixOperator");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNavigationOperatorCS
entryRuleNavigationOperatorCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigationOperatorCSRule()); }
	iv_ruleNavigationOperatorCS=ruleNavigationOperatorCS
	{ $current=$iv_ruleNavigationOperatorCS.current; }
	EOF;

// Rule NavigationOperatorCS
ruleNavigationOperatorCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNavigationOperatorCSAccess().getNameNavigationOperatorParserRuleCall_0());
			}
			lv_name_0_0=ruleNavigationOperator
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNavigationOperatorCSRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.mydsl.MyAtl.NavigationOperator");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePrefixedExpCS
entryRulePrefixedExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixedExpCSRule()); }
	iv_rulePrefixedExpCS=rulePrefixedExpCS
	{ $current=$iv_rulePrefixedExpCS.current; }
	EOF;

// Rule PrefixedExpCS
rulePrefixedExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrefixedExpCSAccess().getPrimaryExpCSParserRuleCall_0());
		}
		this_PrimaryExpCS_0=rulePrimaryExpCS
		{
			$current = $this_PrimaryExpCS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrefixedExpCSAccess().getPrefixExpCSAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrefixedExpCSAccess().getOwnedOperatorUnaryOperatorCSParserRuleCall_1_1_0());
					}
					lv_ownedOperator_2_0=ruleUnaryOperatorCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrefixedExpCSRule());
						}
						add(
							$current,
							"ownedOperator",
							lv_ownedOperator_2_0,
							"org.xtext.example.mydsl.MyAtl.UnaryOperatorCS");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				(
					{
						newCompositeNode(grammarAccess.getPrefixedExpCSAccess().getOwnedExpressionPrimaryExpCSParserRuleCall_1_2_0());
					}
					lv_ownedExpression_3_0=rulePrimaryExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrefixedExpCSRule());
						}
						set(
							$current,
							"ownedExpression",
							lv_ownedExpression_3_0,
							"org.xtext.example.mydsl.MyAtl.PrimaryExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUnaryOperatorCS
entryRuleUnaryOperatorCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOperatorCSRule()); }
	iv_ruleUnaryOperatorCS=ruleUnaryOperatorCS
	{ $current=$iv_ruleUnaryOperatorCS.current; }
	EOF;

// Rule UnaryOperatorCS
ruleUnaryOperatorCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getUnaryOperatorCSAccess().getNamePrefixOperatorParserRuleCall_0());
			}
			lv_name_0_0=rulePrefixOperator
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getUnaryOperatorCSRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.mydsl.MyAtl.PrefixOperator");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIndexExpCS
entryRuleIndexExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexExpCSRule()); }
	iv_ruleIndexExpCS=ruleIndexExpCS
	{ $current=$iv_ruleIndexExpCS.current; }
	EOF;

// Rule IndexExpCS
ruleIndexExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIndexExpCSAccess().getNameExpCSParserRuleCall_0());
		}
		this_NameExpCS_0=ruleNameExpCS
		{
			$current = $this_NameExpCS_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getIndexExpCSAccess().getIndexExpCSNamedExpAction_1_0(),
						$current);
				}
			)
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getIndexExpCSAccess().getLeftSquareBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIndexExpCSAccess().getFirstIndexesExpCSParserRuleCall_1_2_0());
					}
					lv_firstIndexes_3_0=ruleExpCS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIndexExpCSRule());
						}
						add(
							$current,
							"firstIndexes",
							lv_firstIndexes_3_0,
							"org.xtext.example.mydsl.MyAtl.ExpCS");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getIndexExpCSAccess().getCommaKeyword_1_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIndexExpCSAccess().getFirstIndexesExpCSParserRuleCall_1_3_1_0());
						}
						lv_firstIndexes_5_0=ruleExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIndexExpCSRule());
							}
							add(
								$current,
								"firstIndexes",
								lv_firstIndexes_5_0,
								"org.xtext.example.mydsl.MyAtl.ExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getIndexExpCSAccess().getRightSquareBracketKeyword_1_4());
			}
			(
				otherlv_7='['
				{
					newLeafNode(otherlv_7, grammarAccess.getIndexExpCSAccess().getLeftSquareBracketKeyword_1_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIndexExpCSAccess().getSecondIndexesExpCSParserRuleCall_1_5_1_0());
						}
						lv_secondIndexes_8_0=ruleExpCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIndexExpCSRule());
							}
							add(
								$current,
								"secondIndexes",
								lv_secondIndexes_8_0,
								"org.xtext.example.mydsl.MyAtl.ExpCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9=','
					{
						newLeafNode(otherlv_9, grammarAccess.getIndexExpCSAccess().getCommaKeyword_1_5_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getIndexExpCSAccess().getSecondIndexesExpCSParserRuleCall_1_5_2_1_0());
							}
							lv_secondIndexes_10_0=ruleExpCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIndexExpCSRule());
								}
								add(
									$current,
									"secondIndexes",
									lv_secondIndexes_10_0,
									"org.xtext.example.mydsl.MyAtl.ExpCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_11=']'
				{
					newLeafNode(otherlv_11, grammarAccess.getIndexExpCSAccess().getRightSquareBracketKeyword_1_5_3());
				}
			)?
		)?
	)
;

// Entry rule entryRuleNavigatingExpCS_Base
entryRuleNavigatingExpCS_Base returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingExpCS_BaseRule()); }
	iv_ruleNavigatingExpCS_Base=ruleNavigatingExpCS_Base
	{ $current=$iv_ruleNavigatingExpCS_Base.current; }
	EOF;

// Rule NavigatingExpCS_Base
ruleNavigatingExpCS_Base returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getNavigatingExpCS_BaseAccess().getIndexExpCSParserRuleCall());
	}
	this_IndexExpCS_0=ruleIndexExpCS
	{
		$current = $this_IndexExpCS_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleNavigatingExpCS
entryRuleNavigatingExpCS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigatingExpCSRule()); }
	iv_ruleNavigatingExpCS=ruleNavigatingExpCS
	{ $current=$iv_ruleNavigatingExpCS.current; }
	EOF;

// Rule NavigatingExpCS
ruleNavigatingExpCS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNavigatingExpCSAccess().getNavigatingExpCS_BaseParserRuleCall_0());
		}
		this_NavigatingExpCS_Base_0=ruleNavigatingExpCS_Base
		{
			$current = $this_NavigatingExpCS_Base_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getNavigatingExpCSAccess().getNavigatingExpCSNamedExpAction_1_0(),
						$current);
				}
			)
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getNavigatingExpCSAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigatingExpCSAccess().getArgumentNavigatingArgCSParserRuleCall_1_2_0_0());
						}
						lv_argument_3_0=ruleNavigatingArgCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigatingExpCSRule());
							}
							add(
								$current,
								"argument",
								lv_argument_3_0,
								"org.xtext.example.mydsl.MyAtl.NavigatingArgCS");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getNavigatingExpCSAccess().getArgumentNavigatingCommaArgCSParserRuleCall_1_2_1_0());
						}
						lv_argument_4_0=ruleNavigatingCommaArgCS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNavigatingExpCSRule());
							}
							add(
								$current,
								"argument",
								lv_argument_4_0,
								"org.xtext.example.mydsl.MyAtl.NavigatingCommaArgCS");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getNavigatingExpCSAccess().getArgumentNavigatingSemiArgCSParserRuleCall_1_2_2_0_0());
							}
							lv_argument_5_0=ruleNavigatingSemiArgCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNavigatingExpCSRule());
								}
								add(
									$current,
									"argument",
									lv_argument_5_0,
									"org.xtext.example.mydsl.MyAtl.NavigatingSemiArgCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getNavigatingExpCSAccess().getArgumentNavigatingCommaArgCSParserRuleCall_1_2_2_1_0());
							}
							lv_argument_6_0=ruleNavigatingCommaArgCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNavigatingExpCSRule());
								}
								add(
									$current,
									"argument",
									lv_argument_6_0,
									"org.xtext.example.mydsl.MyAtl.NavigatingCommaArgCS");
								afterParserOrEnumRuleCall();
							}
						)
					)*
				)?
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getNavigatingExpCSAccess().getArgumentNavigatingBarArgCSParserRuleCall_1_2_3_0_0());
							}
							lv_argument_7_0=ruleNavigatingBarArgCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNavigatingExpCSRule());
								}
								add(
									$current,
									"argument",
									lv_argument_7_0,
									"org.xtext.example.mydsl.MyAtl.NavigatingBarArgCS");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getNavigatingExpCSAccess().getArgumentNavigatingCommaArgCSParserRuleCall_1_2_3_1_0());
							}
							lv_argument_8_0=ruleNavigatingCommaArgCS
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNavigatingExpCSRule());
								}
								add(
									$current,
									"argument",
									lv_argument_8_0,
									"org.xtext.example.mydsl.MyAtl.NavigatingCommaArgCS");
								afterParserOrEnumRuleCall();
							}
						)
					)*
				)?
			)?
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getNavigatingExpCSAccess().getRightParenthesisKeyword_1_3());
			}
		)?
	)
;

RULE_DOUBLE_QUOTED_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_SINGLE_QUOTED_STRING : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_ML_SINGLE_QUOTED_STRING : '/\'' ( options {greedy=false;} : . )*'\'/';

RULE_SIMPLE_ID : ('a'..'z'|'A'..'Z'|'_'|'#'|'|'|'"') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'!'|'|'|'"')*;

RULE_BIG_INT : ('0'..'9')+;

RULE_DOCUMENTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');
