/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyAtlParser;
import org.xtext.example.mydsl.services.MyAtlGrammarAccess;

public class MyAtlParser extends AbstractContentAssistParser {

	@Inject
	private MyAtlGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMyAtlParser createParser() {
		InternalMyAtlParser result = new InternalMyAtlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives(), "rule__EssentialOCLUnreservedName__Alternatives");
					put(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives(), "rule__PrimitiveTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives(), "rule__CollectionTypeIdentifier__Alternatives");
					put(grammarAccess.getModuleElementAccess().getAlternatives(), "rule__ModuleElement__Alternatives");
					put(grammarAccess.getCalledRuleAccess().getAlternatives_0(), "rule__CalledRule__Alternatives_0");
					put(grammarAccess.getOutPatternElementAccess().getAlternatives(), "rule__OutPatternElement__Alternatives");
					put(grammarAccess.getEssentialOCLRersevedKeywordAccess().getAlternatives(), "rule__EssentialOCLRersevedKeyword__Alternatives");
					put(grammarAccess.getEssentialOCLPrefixOperatorAccess().getAlternatives(), "rule__EssentialOCLPrefixOperator__Alternatives");
					put(grammarAccess.getEssentialOCLInfixOperatorAccess().getAlternatives(), "rule__EssentialOCLInfixOperator__Alternatives");
					put(grammarAccess.getEssentialOCLNavigationOperatorAccess().getAlternatives(), "rule__EssentialOCLNavigationOperator__Alternatives");
					put(grammarAccess.getCollectionTypeCSAccess().getAlternatives_1(), "rule__CollectionTypeCS__Alternatives_1");
					put(grammarAccess.getCollectionTypeCSAccess().getAlternatives_1_0_0(), "rule__CollectionTypeCS__Alternatives_1_0_0");
					put(grammarAccess.getCollectionTypeCSAccess().getAlternatives_1_0_2(), "rule__CollectionTypeCS__Alternatives_1_0_2");
					put(grammarAccess.getTupleTypeCSAccess().getAlternatives_1(), "rule__TupleTypeCS__Alternatives_1");
					put(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives(), "rule__PrimitiveLiteralExpCS__Alternatives");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives(), "rule__BooleanLiteralExpCS__Alternatives");
					put(grammarAccess.getTypeLiteralCSAccess().getAlternatives(), "rule__TypeLiteralCS__Alternatives");
					put(grammarAccess.getTypeNameExpCSAccess().getAlternatives(), "rule__TypeNameExpCS__Alternatives");
					put(grammarAccess.getTypeExpCSAccess().getAlternatives(), "rule__TypeExpCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives(), "rule__PrimaryExpCS__Alternatives");
					put(grammarAccess.getNameExpCSAccess().getAlternatives(), "rule__NameExpCS__Alternatives");
					put(grammarAccess.getBinaryOperatorCSAccess().getAlternatives(), "rule__BinaryOperatorCS__Alternatives");
					put(grammarAccess.getPrefixedExpCSAccess().getAlternatives(), "rule__PrefixedExpCS__Alternatives");
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getModuleAccess().getGroup_7(), "rule__Module__Group_7__0");
					put(grammarAccess.getModuleAccess().getGroup_12(), "rule__Module__Group_12__0");
					put(grammarAccess.getModuleAccess().getGroup_14(), "rule__Module__Group_14__0");
					put(grammarAccess.getMatchedRuleAccess().getGroup(), "rule__MatchedRule__Group__0");
					put(grammarAccess.getMatchedRuleAccess().getGroup_5(), "rule__MatchedRule__Group_5__0");
					put(grammarAccess.getMatchedRuleAccess().getGroup_10(), "rule__MatchedRule__Group_10__0");
					put(grammarAccess.getCalledRuleAccess().getGroup(), "rule__CalledRule__Group__0");
					put(grammarAccess.getCalledRuleAccess().getGroup_3(), "rule__CalledRule__Group_3__0");
					put(grammarAccess.getCalledRuleAccess().getGroup_5(), "rule__CalledRule__Group_5__0");
					put(grammarAccess.getCalledRuleAccess().getGroup_10(), "rule__CalledRule__Group_10__0");
					put(grammarAccess.getQueryRuleAccess().getGroup(), "rule__QueryRule__Group__0");
					put(grammarAccess.getQueryRuleAccess().getGroup_2(), "rule__QueryRule__Group_2__0");
					put(grammarAccess.getQueryRuleAccess().getGroup_2_1(), "rule__QueryRule__Group_2_1__0");
					put(grammarAccess.getQueryRuleAccess().getGroup_2_1_1(), "rule__QueryRule__Group_2_1_1__0");
					put(grammarAccess.getHelperAccess().getGroup(), "rule__Helper__Group__0");
					put(grammarAccess.getATLDefCSAccess().getGroup(), "rule__ATLDefCS__Group__0");
					put(grammarAccess.getATLDefCSAccess().getGroup_3(), "rule__ATLDefCS__Group_3__0");
					put(grammarAccess.getATLDefCSAccess().getGroup_3_1(), "rule__ATLDefCS__Group_3_1__0");
					put(grammarAccess.getATLDefCSAccess().getGroup_3_1_1(), "rule__ATLDefCS__Group_3_1_1__0");
					put(grammarAccess.getATLParameterCSAccess().getGroup(), "rule__ATLParameterCS__Group__0");
					put(grammarAccess.getRuleVariableDeclarationAccess().getGroup(), "rule__RuleVariableDeclaration__Group__0");
					put(grammarAccess.getInPatternAccess().getGroup(), "rule__InPattern__Group__0");
					put(grammarAccess.getInPatternAccess().getGroup_1(), "rule__InPattern__Group_1__0");
					put(grammarAccess.getInPatternElementAccess().getGroup(), "rule__InPatternElement__Group__0");
					put(grammarAccess.getOutPatternAccess().getGroup(), "rule__OutPattern__Group__0");
					put(grammarAccess.getOutPatternAccess().getGroup_1(), "rule__OutPattern__Group_1__0");
					put(grammarAccess.getSimpleOutPatternElementAccess().getGroup(), "rule__SimpleOutPatternElement__Group__0");
					put(grammarAccess.getSimpleOutPatternElementAccess().getGroup_3(), "rule__SimpleOutPatternElement__Group_3__0");
					put(grammarAccess.getSimpleOutPatternElementAccess().getGroup_3_1(), "rule__SimpleOutPatternElement__Group_3_1__0");
					put(grammarAccess.getSimpleOutPatternElementAccess().getGroup_3_1_1(), "rule__SimpleOutPatternElement__Group_3_1_1__0");
					put(grammarAccess.getForEachOutPatternElementAccess().getGroup(), "rule__ForEachOutPatternElement__Group__0");
					put(grammarAccess.getBindingAccess().getGroup(), "rule__Binding__Group__0");
					put(grammarAccess.getBindingStatAccess().getGroup(), "rule__BindingStat__Group__0");
					put(grammarAccess.getATLTypeAccess().getGroup(), "rule__ATLType__Group__0");
					put(grammarAccess.getATLTypeAccess().getGroup_0(), "rule__ATLType__Group_0__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup(), "rule__CollectionTypeCS__Group__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup_1_0(), "rule__CollectionTypeCS__Group_1_0__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup_1_1(), "rule__CollectionTypeCS__Group_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup(), "rule__TupleTypeCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_0(), "rule__TupleTypeCS__Group_1_0__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_0_1(), "rule__TupleTypeCS__Group_1_0_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_0_1_1(), "rule__TupleTypeCS__Group_1_0_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1(), "rule__TupleTypeCS__Group_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1(), "rule__TupleTypeCS__Group_1_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1_1(), "rule__TupleTypeCS__Group_1_1_1_1__0");
					put(grammarAccess.getTuplePartCSAccess().getGroup(), "rule__TuplePartCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup(), "rule__TupleLiteralExpCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3(), "rule__TupleLiteralExpCS__Group_3__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup(), "rule__TupleLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1(), "rule__TupleLiteralPartCS__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup(), "rule__UnlimitedNaturalLiteralExpCS__Group__0");
					put(grammarAccess.getInvalidLiteralExpCSAccess().getGroup(), "rule__InvalidLiteralExpCS__Group__0");
					put(grammarAccess.getNullLiteralExpCSAccess().getGroup(), "rule__NullLiteralExpCS__Group__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup_0(), "rule__TypeNameExpCS__Group_0__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup_0_0(), "rule__TypeNameExpCS__Group_0_0__0");
					put(grammarAccess.getTypeNameExpCSAccess().getGroup_0_0_2(), "rule__TypeNameExpCS__Group_0_0_2__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup(), "rule__NavigatingArgCS__Group__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1(), "rule__NavigatingArgCS__Group_1__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_2(), "rule__NavigatingArgCS__Group_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup(), "rule__NavigatingBarArgCS__Group__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2(), "rule__NavigatingBarArgCS__Group_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_3(), "rule__NavigatingBarArgCS__Group_3__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup(), "rule__NavigatingCommaArgCS__Group__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2(), "rule__NavigatingCommaArgCS__Group_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_3(), "rule__NavigatingCommaArgCS__Group_3__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup(), "rule__NavigatingSemiArgCS__Group__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2(), "rule__NavigatingSemiArgCS__Group_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_3(), "rule__NavigatingSemiArgCS__Group_3__0");
					put(grammarAccess.getIfExpCSAccess().getGroup(), "rule__IfExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup(), "rule__LetExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup_2(), "rule__LetExpCS__Group_2__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup(), "rule__LetVariableCS__Group__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup_1(), "rule__LetVariableCS__Group_1__0");
					put(grammarAccess.getNestedExpCSAccess().getGroup(), "rule__NestedExpCS__Group__0");
					put(grammarAccess.getSelfExpCSAccess().getGroup(), "rule__SelfExpCS__Group__0");
					put(grammarAccess.getNameExpCSAccess().getGroup_0(), "rule__NameExpCS__Group_0__0");
					put(grammarAccess.getNameExpCSAccess().getGroup_0_0(), "rule__NameExpCS__Group_0_0__0");
					put(grammarAccess.getNameExpCSAccess().getGroup_0_0_2(), "rule__NameExpCS__Group_0_0_2__0");
					put(grammarAccess.getInfixedExpCSAccess().getGroup(), "rule__InfixedExpCS__Group__0");
					put(grammarAccess.getInfixedExpCSAccess().getGroup_1(), "rule__InfixedExpCS__Group_1__0");
					put(grammarAccess.getInfixedExpCSAccess().getGroup_1_1(), "rule__InfixedExpCS__Group_1_1__0");
					put(grammarAccess.getPrefixedExpCSAccess().getGroup_1(), "rule__PrefixedExpCS__Group_1__0");
					put(grammarAccess.getIndexExpCSAccess().getGroup(), "rule__IndexExpCS__Group__0");
					put(grammarAccess.getIndexExpCSAccess().getGroup_1(), "rule__IndexExpCS__Group_1__0");
					put(grammarAccess.getIndexExpCSAccess().getGroup_1_3(), "rule__IndexExpCS__Group_1_3__0");
					put(grammarAccess.getIndexExpCSAccess().getGroup_1_5(), "rule__IndexExpCS__Group_1_5__0");
					put(grammarAccess.getIndexExpCSAccess().getGroup_1_5_2(), "rule__IndexExpCS__Group_1_5_2__0");
					put(grammarAccess.getNavigatingExpCSAccess().getGroup(), "rule__NavigatingExpCS__Group__0");
					put(grammarAccess.getNavigatingExpCSAccess().getGroup_1(), "rule__NavigatingExpCS__Group_1__0");
					put(grammarAccess.getNavigatingExpCSAccess().getGroup_1_2(), "rule__NavigatingExpCS__Group_1_2__0");
					put(grammarAccess.getNavigatingExpCSAccess().getGroup_1_2_2(), "rule__NavigatingExpCS__Group_1_2_2__0");
					put(grammarAccess.getNavigatingExpCSAccess().getGroup_1_2_3(), "rule__NavigatingExpCS__Group_1_2_3__0");
					put(grammarAccess.getModuleAccess().getNameAssignment_1(), "rule__Module__NameAssignment_1");
					put(grammarAccess.getModuleAccess().getOutModelsAssignment_6(), "rule__Module__OutModelsAssignment_6");
					put(grammarAccess.getModuleAccess().getOutModelsAssignment_7_1(), "rule__Module__OutModelsAssignment_7_1");
					put(grammarAccess.getModuleAccess().getInModelsAssignment_11(), "rule__Module__InModelsAssignment_11");
					put(grammarAccess.getModuleAccess().getInModelsAssignment_12_1(), "rule__Module__InModelsAssignment_12_1");
					put(grammarAccess.getModuleAccess().getVarNameAssignment_14_1(), "rule__Module__VarNameAssignment_14_1");
					put(grammarAccess.getModuleAccess().getElementsAssignment_15(), "rule__Module__ElementsAssignment_15");
					put(grammarAccess.getMatchedRuleAccess().getNameAssignment_1(), "rule__MatchedRule__NameAssignment_1");
					put(grammarAccess.getMatchedRuleAccess().getInPatternAssignment_4(), "rule__MatchedRule__InPatternAssignment_4");
					put(grammarAccess.getMatchedRuleAccess().getVariablesAssignment_5_2(), "rule__MatchedRule__VariablesAssignment_5_2");
					put(grammarAccess.getMatchedRuleAccess().getOutPatternAssignment_7(), "rule__MatchedRule__OutPatternAssignment_7");
					put(grammarAccess.getMatchedRuleAccess().getActionBlockAssignment_10_2(), "rule__MatchedRule__ActionBlockAssignment_10_2");
					put(grammarAccess.getCalledRuleAccess().getNameAssignment_2(), "rule__CalledRule__NameAssignment_2");
					put(grammarAccess.getCalledRuleAccess().getVariablesAssignment_5_2(), "rule__CalledRule__VariablesAssignment_5_2");
					put(grammarAccess.getCalledRuleAccess().getOutPatternAssignment_7(), "rule__CalledRule__OutPatternAssignment_7");
					put(grammarAccess.getCalledRuleAccess().getActionBlockAssignment_10_2(), "rule__CalledRule__ActionBlockAssignment_10_2");
					put(grammarAccess.getQueryRuleAccess().getNameAssignment_1(), "rule__QueryRule__NameAssignment_1");
					put(grammarAccess.getQueryRuleAccess().getParametersAssignment_2_1_0(), "rule__QueryRule__ParametersAssignment_2_1_0");
					put(grammarAccess.getQueryRuleAccess().getParametersAssignment_2_1_1_1(), "rule__QueryRule__ParametersAssignment_2_1_1_1");
					put(grammarAccess.getQueryRuleAccess().getInitExpressionAssignment_4(), "rule__QueryRule__InitExpressionAssignment_4");
					put(grammarAccess.getHelperAccess().getNameAssignment_2(), "rule__Helper__NameAssignment_2");
					put(grammarAccess.getHelperAccess().getDefinitionAssignment_3(), "rule__Helper__DefinitionAssignment_3");
					put(grammarAccess.getATLDefCSAccess().getVarNameAssignment_2(), "rule__ATLDefCS__VarNameAssignment_2");
					put(grammarAccess.getATLDefCSAccess().getParametersAssignment_3_1_0(), "rule__ATLDefCS__ParametersAssignment_3_1_0");
					put(grammarAccess.getATLDefCSAccess().getParametersAssignment_3_1_1_1(), "rule__ATLDefCS__ParametersAssignment_3_1_1_1");
					put(grammarAccess.getATLDefCSAccess().getTypeAssignment_5(), "rule__ATLDefCS__TypeAssignment_5");
					put(grammarAccess.getATLDefCSAccess().getInitExpressionAssignment_7(), "rule__ATLDefCS__InitExpressionAssignment_7");
					put(grammarAccess.getATLParameterCSAccess().getVarNameAssignment_0(), "rule__ATLParameterCS__VarNameAssignment_0");
					put(grammarAccess.getATLParameterCSAccess().getTypeAssignment_2(), "rule__ATLParameterCS__TypeAssignment_2");
					put(grammarAccess.getRuleVariableDeclarationAccess().getVarNameAssignment_0(), "rule__RuleVariableDeclaration__VarNameAssignment_0");
					put(grammarAccess.getRuleVariableDeclarationAccess().getTypeAssignment_2(), "rule__RuleVariableDeclaration__TypeAssignment_2");
					put(grammarAccess.getRuleVariableDeclarationAccess().getInitExpressionAssignment_4(), "rule__RuleVariableDeclaration__InitExpressionAssignment_4");
					put(grammarAccess.getInPatternAccess().getElementsAssignment_0(), "rule__InPattern__ElementsAssignment_0");
					put(grammarAccess.getInPatternAccess().getFilterAssignment_1_1(), "rule__InPattern__FilterAssignment_1_1");
					put(grammarAccess.getInPatternElementAccess().getVarNameAssignment_0(), "rule__InPatternElement__VarNameAssignment_0");
					put(grammarAccess.getInPatternElementAccess().getTypeAssignment_2(), "rule__InPatternElement__TypeAssignment_2");
					put(grammarAccess.getOutPatternAccess().getElementsAssignment_0(), "rule__OutPattern__ElementsAssignment_0");
					put(grammarAccess.getOutPatternAccess().getElementsAssignment_1_1(), "rule__OutPattern__ElementsAssignment_1_1");
					put(grammarAccess.getSimpleOutPatternElementAccess().getVarNameAssignment_0(), "rule__SimpleOutPatternElement__VarNameAssignment_0");
					put(grammarAccess.getSimpleOutPatternElementAccess().getTypeAssignment_2(), "rule__SimpleOutPatternElement__TypeAssignment_2");
					put(grammarAccess.getSimpleOutPatternElementAccess().getBindingsAssignment_3_1_0(), "rule__SimpleOutPatternElement__BindingsAssignment_3_1_0");
					put(grammarAccess.getSimpleOutPatternElementAccess().getBindingsAssignment_3_1_1_1(), "rule__SimpleOutPatternElement__BindingsAssignment_3_1_1_1");
					put(grammarAccess.getForEachOutPatternElementAccess().getCollectionAssignment_1(), "rule__ForEachOutPatternElement__CollectionAssignment_1");
					put(grammarAccess.getBindingAccess().getPropertyNameAssignment_0(), "rule__Binding__PropertyNameAssignment_0");
					put(grammarAccess.getBindingAccess().getValueAssignment_2(), "rule__Binding__ValueAssignment_2");
					put(grammarAccess.getActionBlockAccess().getStatementsAssignment(), "rule__ActionBlock__StatementsAssignment");
					put(grammarAccess.getBindingStatAccess().getSourceAssignment_0(), "rule__BindingStat__SourceAssignment_0");
					put(grammarAccess.getBindingStatAccess().getPropertyNameAssignment_2(), "rule__BindingStat__PropertyNameAssignment_2");
					put(grammarAccess.getBindingStatAccess().getValueAssignment_4(), "rule__BindingStat__ValueAssignment_4");
					put(grammarAccess.getATLTypeAccess().getModelNameAssignment_0_0(), "rule__ATLType__ModelNameAssignment_0_0");
					put(grammarAccess.getATLTypeAccess().getTypeAssignment_1(), "rule__ATLType__TypeAssignment_1");
					put(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0(), "rule__CollectionTypeCS__NameAssignment_0");
					put(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_0_1(), "rule__CollectionTypeCS__OwnedTypeAssignment_1_0_1");
					put(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1_1(), "rule__CollectionTypeCS__OwnedTypeAssignment_1_1_1");
					put(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0(), "rule__TupleTypeCS__NameAssignment_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_0_1_0(), "rule__TupleTypeCS__OwnedPartsAssignment_1_0_1_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_0_1_1_1(), "rule__TupleTypeCS__OwnedPartsAssignment_1_0_1_1_1");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_0(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1_1(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1_1");
					put(grammarAccess.getTupleTypeCSAccess().getBacktrackAssignment_2(), "rule__TupleTypeCS__BacktrackAssignment_2");
					put(grammarAccess.getTuplePartCSAccess().getNameAssignment_0(), "rule__TuplePartCS__NameAssignment_0");
					put(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2(), "rule__TuplePartCS__OwnedTypeAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0(), "rule__TupleLiteralPartCS__NameAssignment_0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1(), "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionAssignment_3(), "rule__TupleLiteralPartCS__InitExpressionAssignment_3");
					put(grammarAccess.getNumberLiteralExpCSAccess().getNameAssignment(), "rule__NumberLiteralExpCS__NameAssignment");
					put(grammarAccess.getStringLiteralExpCSAccess().getNameAssignment(), "rule__StringLiteralExpCS__NameAssignment");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_0(), "rule__BooleanLiteralExpCS__NameAssignment_0");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_1(), "rule__BooleanLiteralExpCS__NameAssignment_1");
					put(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment(), "rule__PrimitiveTypeCS__NameAssignment");
					put(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment(), "rule__TypeLiteralExpCS__OwnedTypeAssignment");
					put(grammarAccess.getTypeNameExpCSAccess().getNamespaceAssignment_0_0_0(), "rule__TypeNameExpCS__NamespaceAssignment_0_0_0");
					put(grammarAccess.getTypeNameExpCSAccess().getNamespaceAssignment_0_0_2_0(), "rule__TypeNameExpCS__NamespaceAssignment_0_0_2_0");
					put(grammarAccess.getTypeNameExpCSAccess().getElementAssignment_0_1(), "rule__TypeNameExpCS__ElementAssignment_0_1");
					put(grammarAccess.getTypeNameExpCSAccess().getElementAssignment_1(), "rule__TypeNameExpCS__ElementAssignment_1");
					put(grammarAccess.getNavigatingArgCSAccess().getNameAssignment_0(), "rule__NavigatingArgCS__NameAssignment_0");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getNavigatingArgCSAccess().getInitAssignment_2_1(), "rule__NavigatingArgCS__InitAssignment_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingBarArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getNameAssignment_1(), "rule__NavigatingBarArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getInitAssignment_3_1(), "rule__NavigatingBarArgCS__InitAssignment_3_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingCommaArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getNameAssignment_1(), "rule__NavigatingCommaArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getInitAssignment_3_1(), "rule__NavigatingCommaArgCS__InitAssignment_3_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingSemiArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getNameAssignment_1(), "rule__NavigatingSemiArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getInitAssignment_3_1(), "rule__NavigatingSemiArgCS__InitAssignment_3_1");
					put(grammarAccess.getIfExpCSAccess().getConditionAssignment_1(), "rule__IfExpCS__ConditionAssignment_1");
					put(grammarAccess.getIfExpCSAccess().getThenExpressionAssignment_3(), "rule__IfExpCS__ThenExpressionAssignment_3");
					put(grammarAccess.getIfExpCSAccess().getElseExpressionAssignment_5(), "rule__IfExpCS__ElseExpressionAssignment_5");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_1(), "rule__LetExpCS__VariableAssignment_1");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_2_1(), "rule__LetExpCS__VariableAssignment_2_1");
					put(grammarAccess.getLetExpCSAccess().getInAssignment_4(), "rule__LetExpCS__InAssignment_4");
					put(grammarAccess.getLetVariableCSAccess().getNameAssignment_0(), "rule__LetVariableCS__NameAssignment_0");
					put(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_1_1(), "rule__LetVariableCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getLetVariableCSAccess().getInitExpressionAssignment_3(), "rule__LetVariableCS__InitExpressionAssignment_3");
					put(grammarAccess.getNestedExpCSAccess().getSourceAssignment_1(), "rule__NestedExpCS__SourceAssignment_1");
					put(grammarAccess.getStringExpCsAccess().getNameAssignment(), "rule__StringExpCs__NameAssignment");
					put(grammarAccess.getNameExpCSAccess().getNamespaceAssignment_0_0_0(), "rule__NameExpCS__NamespaceAssignment_0_0_0");
					put(grammarAccess.getNameExpCSAccess().getNamespaceAssignment_0_0_2_0(), "rule__NameExpCS__NamespaceAssignment_0_0_2_0");
					put(grammarAccess.getNameExpCSAccess().getElementAssignment_0_1(), "rule__NameExpCS__ElementAssignment_0_1");
					put(grammarAccess.getNameExpCSAccess().getElementAssignment_1(), "rule__NameExpCS__ElementAssignment_1");
					put(grammarAccess.getInfixedExpCSAccess().getOwnedOperatorAssignment_1_1_0(), "rule__InfixedExpCS__OwnedOperatorAssignment_1_1_0");
					put(grammarAccess.getInfixedExpCSAccess().getOwnedExpressionAssignment_1_1_1(), "rule__InfixedExpCS__OwnedExpressionAssignment_1_1_1");
					put(grammarAccess.getInfixOperatorCSAccess().getNameAssignment(), "rule__InfixOperatorCS__NameAssignment");
					put(grammarAccess.getNavigationOperatorCSAccess().getNameAssignment(), "rule__NavigationOperatorCS__NameAssignment");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedOperatorAssignment_1_1(), "rule__PrefixedExpCS__OwnedOperatorAssignment_1_1");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedExpressionAssignment_1_2(), "rule__PrefixedExpCS__OwnedExpressionAssignment_1_2");
					put(grammarAccess.getUnaryOperatorCSAccess().getNameAssignment(), "rule__UnaryOperatorCS__NameAssignment");
					put(grammarAccess.getIndexExpCSAccess().getFirstIndexesAssignment_1_2(), "rule__IndexExpCS__FirstIndexesAssignment_1_2");
					put(grammarAccess.getIndexExpCSAccess().getFirstIndexesAssignment_1_3_1(), "rule__IndexExpCS__FirstIndexesAssignment_1_3_1");
					put(grammarAccess.getIndexExpCSAccess().getSecondIndexesAssignment_1_5_1(), "rule__IndexExpCS__SecondIndexesAssignment_1_5_1");
					put(grammarAccess.getIndexExpCSAccess().getSecondIndexesAssignment_1_5_2_1(), "rule__IndexExpCS__SecondIndexesAssignment_1_5_2_1");
					put(grammarAccess.getNavigatingExpCSAccess().getArgumentAssignment_1_2_0(), "rule__NavigatingExpCS__ArgumentAssignment_1_2_0");
					put(grammarAccess.getNavigatingExpCSAccess().getArgumentAssignment_1_2_1(), "rule__NavigatingExpCS__ArgumentAssignment_1_2_1");
					put(grammarAccess.getNavigatingExpCSAccess().getArgumentAssignment_1_2_2_0(), "rule__NavigatingExpCS__ArgumentAssignment_1_2_2_0");
					put(grammarAccess.getNavigatingExpCSAccess().getArgumentAssignment_1_2_2_1(), "rule__NavigatingExpCS__ArgumentAssignment_1_2_2_1");
					put(grammarAccess.getNavigatingExpCSAccess().getArgumentAssignment_1_2_3_0(), "rule__NavigatingExpCS__ArgumentAssignment_1_2_3_0");
					put(grammarAccess.getNavigatingExpCSAccess().getArgumentAssignment_1_2_3_1(), "rule__NavigatingExpCS__ArgumentAssignment_1_2_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyAtlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyAtlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
