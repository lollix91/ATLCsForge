/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.myOcl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myOcl.DefCS;
import org.xtext.example.mydsl.myOcl.MyOclPackage;
import org.xtext.example.mydsl.myOcl.SpecificationCS;
import org.xtext.example.mydsl.myOcl.TypeExpCS;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Def CS</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myOcl.impl.DefCSImpl#isIsStatic <em>Is Static</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myOcl.impl.DefCSImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myOcl.impl.DefCSImpl#getOwnedType <em>Owned Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myOcl.impl.DefCSImpl#getOwnedSpecification <em>Owned Specification</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DefCSImpl extends MinimalEObjectImpl.Container implements DefCS
{
  /**
   * The default value of the '{@link #isIsStatic() <em>Is Static</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsStatic()
   * @generated
   * @ordered
   */
  protected static final boolean IS_STATIC_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIsStatic() <em>Is Static</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsStatic()
   * @generated
   * @ordered
   */
  protected boolean isStatic = IS_STATIC_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getOwnedType() <em>Owned Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedType()
   * @generated
   * @ordered
   */
  protected TypeExpCS ownedType;

  /**
   * The cached value of the '{@link #getOwnedSpecification() <em>Owned Specification</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedSpecification()
   * @generated
   * @ordered
   */
  protected SpecificationCS ownedSpecification;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DefCSImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyOclPackage.Literals.DEF_CS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isIsStatic()
  {
    return isStatic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIsStatic(boolean newIsStatic)
  {
    boolean oldIsStatic = isStatic;
    isStatic = newIsStatic;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyOclPackage.DEF_CS__IS_STATIC, oldIsStatic, isStatic));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyOclPackage.DEF_CS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeExpCS getOwnedType()
  {
    return ownedType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedType(TypeExpCS newOwnedType, NotificationChain msgs)
  {
    TypeExpCS oldOwnedType = ownedType;
    ownedType = newOwnedType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyOclPackage.DEF_CS__OWNED_TYPE, oldOwnedType, newOwnedType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOwnedType(TypeExpCS newOwnedType)
  {
    if (newOwnedType != ownedType)
    {
      NotificationChain msgs = null;
      if (ownedType != null)
        msgs = ((InternalEObject)ownedType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyOclPackage.DEF_CS__OWNED_TYPE, null, msgs);
      if (newOwnedType != null)
        msgs = ((InternalEObject)newOwnedType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyOclPackage.DEF_CS__OWNED_TYPE, null, msgs);
      msgs = basicSetOwnedType(newOwnedType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyOclPackage.DEF_CS__OWNED_TYPE, newOwnedType, newOwnedType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SpecificationCS getOwnedSpecification()
  {
    return ownedSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedSpecification(SpecificationCS newOwnedSpecification, NotificationChain msgs)
  {
    SpecificationCS oldOwnedSpecification = ownedSpecification;
    ownedSpecification = newOwnedSpecification;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyOclPackage.DEF_CS__OWNED_SPECIFICATION, oldOwnedSpecification, newOwnedSpecification);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOwnedSpecification(SpecificationCS newOwnedSpecification)
  {
    if (newOwnedSpecification != ownedSpecification)
    {
      NotificationChain msgs = null;
      if (ownedSpecification != null)
        msgs = ((InternalEObject)ownedSpecification).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyOclPackage.DEF_CS__OWNED_SPECIFICATION, null, msgs);
      if (newOwnedSpecification != null)
        msgs = ((InternalEObject)newOwnedSpecification).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyOclPackage.DEF_CS__OWNED_SPECIFICATION, null, msgs);
      msgs = basicSetOwnedSpecification(newOwnedSpecification, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyOclPackage.DEF_CS__OWNED_SPECIFICATION, newOwnedSpecification, newOwnedSpecification));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyOclPackage.DEF_CS__OWNED_TYPE:
        return basicSetOwnedType(null, msgs);
      case MyOclPackage.DEF_CS__OWNED_SPECIFICATION:
        return basicSetOwnedSpecification(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyOclPackage.DEF_CS__IS_STATIC:
        return isIsStatic();
      case MyOclPackage.DEF_CS__NAME:
        return getName();
      case MyOclPackage.DEF_CS__OWNED_TYPE:
        return getOwnedType();
      case MyOclPackage.DEF_CS__OWNED_SPECIFICATION:
        return getOwnedSpecification();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyOclPackage.DEF_CS__IS_STATIC:
        setIsStatic((Boolean)newValue);
        return;
      case MyOclPackage.DEF_CS__NAME:
        setName((String)newValue);
        return;
      case MyOclPackage.DEF_CS__OWNED_TYPE:
        setOwnedType((TypeExpCS)newValue);
        return;
      case MyOclPackage.DEF_CS__OWNED_SPECIFICATION:
        setOwnedSpecification((SpecificationCS)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyOclPackage.DEF_CS__IS_STATIC:
        setIsStatic(IS_STATIC_EDEFAULT);
        return;
      case MyOclPackage.DEF_CS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyOclPackage.DEF_CS__OWNED_TYPE:
        setOwnedType((TypeExpCS)null);
        return;
      case MyOclPackage.DEF_CS__OWNED_SPECIFICATION:
        setOwnedSpecification((SpecificationCS)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyOclPackage.DEF_CS__IS_STATIC:
        return isStatic != IS_STATIC_EDEFAULT;
      case MyOclPackage.DEF_CS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyOclPackage.DEF_CS__OWNED_TYPE:
        return ownedType != null;
      case MyOclPackage.DEF_CS__OWNED_SPECIFICATION:
        return ownedSpecification != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (isStatic: ");
    result.append(isStatic);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //DefCSImpl
